namespace = DG_Orthodox
country_event = { 
	id = DG_Orthodox.001
	title = "AI_Event"
	desc = "AI_Event"
	picture = all_church_state
	hidden = yes
	is_triggered_only = yes
	trigger = { 
		religion = orthodox
	}
	immediate = { 
		every_owned_province = { 
			limit = { 
				has_province_modifier = orthodox_patriarchate
			}
		}
	}
	option = { 
		name = "AI_Event"
		if = { 
			limit = { 
				has_country_flag = great_schism
			}
		}
		else_if = { 
			limit = { 
				at_war_with_religious_enemy = yes
				NOT = { 
					any_owned_province = { 
						has_province_modifier = religious_icon
					}
				}
				NOT = { 
					AND = { 
						is_variable_equal = { 
							which = knm
							value = 3
						}
					}
				}
			}
			random = { 
				chance = 25
				random_province = { 
					limit = { 
						OR = { 
							has_province_modifier = orthodox_patriarchate
							has_province_modifier = orthodox_archbishopric
							has_province_modifier = orthodox_metropolitan
						}
						OR = { 
							has_province_modifier = cenobitic_monastery
							has_province_modifier = anchorite_hermitage
							has_province_modifier = lavra_monastery
							has_province_modifier = stavropegic_monastery
							has_province_modifier = monastic_town
						}
						has_owner_religion = yes
						controlled_by = owner
						has_siege = yes
					}
					province_event = { 
						id = DG_Orthodox.901
					}
				}
			}
		}
		else_if = { 
			limit = { 
				always = no
				NOT = { 
					has_ruler_flag = synod_convened
				}
			}
		}
		else_if = { 
			limit = { 
				any_owned_province = { 
					OR = { 
						is_capital = yes
						has_province_modifier = orthodox_patriarchate
						has_province_modifier = orthodox_archbishopric
					}
					NOT = { 
						OR = { 
							has_province_modifier = cenobitic_monastery
							has_province_modifier = anchorite_hermitage
							has_province_modifier = lavra_monastery
							has_province_modifier = stavropegic_monastery
							has_province_modifier = monastic_town
						}
					}
				}
			}
			random = { 
				chance = 25
				random_owned_province = { 
					limit = { 
						OR = { 
							is_capital = yes
							has_province_modifier = orthodox_patriarchate
							has_province_modifier = orthodox_archbishopric
						}
						NOT = { 
							OR = { 
								has_province_modifier = cenobitic_monastery
								has_province_modifier = anchorite_hermitage
								has_province_modifier = lavra_monastery
								has_province_modifier = stavropegic_monastery
								has_province_modifier = monastic_town
							}
						}
					}
					province_event = { 
						id = DG_Orthodox.002
					}
				}
			}
		}
		else_if = { 
			limit = { 
				NOT = { 
					has_country_flag = holy_fool
				}
			}
			random = { 
				chance = 10
				random_owned_province = { 
					province_event = { 
						id = DG_Orthodox.003
					}
				}
			}
		}
		else = { 
			random_list = { 
				20 = { 
					random_owned_province = { 
						limit = { 
							NOT = { 
								OR = { 
									has_province_modifier = cenobitic_monastery
									has_province_modifier = anchorite_hermitage
									has_province_modifier = lavra_monastery
									has_province_modifier = stavropegic_monastery
									has_province_modifier = monastic_town
								}
							}
							NOT = { 
								base_production = 3
							}
							any_neighbor_province = { 
								base_production = 3
							}
							NOT = { 
								has_province_modifier = monastic_town
							}
							religion = orthodox
						}
						province_event = { 
							id = DG_Orthodox.004
						}
					}
				}
				20 = { 
					if = { 
						limit = { 
							AND = { 
								check_variable = { 
									which = ata
									value = 60
								}
							}
							NOT = { 
								any_owned_province = { 
									has_province_modifier = effective_bishop
								}
							}
						}
						random_owned_province = { 
							limit = { 
								OR = { 
									owner = { 
										NOT = { 
											any_owned_province = { 
												has_province_modifier = orthodox_metropolitan
											}
										}
									}
									has_province_modifier = orthodox_metropolitan
								}
								has_owner_religion = yes
								OR = { 
									base_production = 10
									is_capital = yes
								}
								OR = { 
									culture_group = owner
									has_owner_accepted_culture = yes
								}
								NOT = { 
									any_neighbor_province = { 
										has_province_modifier = orthodox_patriarchate
									}
								}
								NOT = { 
									any_neighbor_province = { 
										has_province_modifier = orthodox_archbishopric
									}
								}
								NOT = { 
									any_neighbor_province = { 
										has_province_modifier = orthodox_metropolitan
									}
								}
								NOT = { 
									has_province_modifier = orthodox_patriarchate
								}
								NOT = { 
									has_province_modifier = orthodox_archbishopric
								}
								NOT = { 
									has_province_modifier = orthodox_metropolitan
								}
							}
							province_event = { 
								id = DG_Orthodox.005
							}
						}
					}
				}
				20 = { 
					random_owned_province = { 
						limit = { 
							owner = { 
								AND = { 
									check_variable = { 
										which = kpf
										value = 2
									}
								}
							}
							has_owner_religion = yes
							OR = { 
								is_capital = yes
								AND = { 
									check_variable = { 
										which = ajy
										value = 2
									}
								}
								has_province_modifier = orthodox_patriarchate
								base_production = 10
							}
						}
						province_event = { 
							id = DG_Orthodox.002
						}
					}
				}
				20 = { 
					random_owned_province = { 
						limit = { 
							owner = { 
								AND = { 
									check_variable = { 
										which = kpf
										value = 3
									}
								}
							}
							OR = { 
								has_owner_religion = no
								is_colony = yes
								has_empty_adjacent_province = yes
							}
							NOT = { 
								base_production = 3
							}
						}
						province_event = { 
							id = DG_Orthodox.002
						}
					}
				}
				20 = { 
					random_owned_province = { 
						limit = { 
							owner = { 
								AND = { 
									check_variable = { 
										which = kpf
										value = 4
									}
								}
							}
							OR = { 
								has_owner_religion = yes
								is_colony = yes
							}
						}
						province_event = { 
							id = DG_Orthodox.002
						}
					}
				}
			}
		}
	}
	after = { }
}
province_event = { 
	id = DG_Orthodox.002
	title = "DG_Orthodox.002.title"
	desc = "DG_Orthodox.002.desc"
	picture = orthodox_monks
	is_triggered_only = yes
	immediate = { }
	option = { 
		name = "DG_Orthodox.002.opta"
		trigger = { 
			owner = { 
				AND = { 
					check_variable = { 
						which = kpf
						value = 2
					}
				}
			}
			NOT = { 
				has_province_modifier = stavropegic_monastery
			}
			has_owner_religion = yes
			OR = { 
				is_capital = yes
				AND = { 
					check_variable = { 
						which = ajy
						value = 2
					}
				}
				has_province_modifier = orthodox_patriarchate
				base_production = 10
			}
			owner = { 
				any_owned_province = { 
					has_province_modifier = orthodox_patriarchate
				}
			}
		}
		ai_chance = { 
			factor = 5
		}
		set_province_flag = stavropegic_monastery
		add_permanent_province_modifier = { 
			name = stavropegic_monastery
			duration = -1
			hidden = yes
		}
		owner = { 
			add_patriarch_authority = 0.05
		}
		hidden_effect = { 
			if = { 
				limit = { 
					AND = { 
						is_variable_equal = { 
							which = adv
							value = 9
						}
					}
				}
				change_variable = { 
					which = azt
					value = 2
				}
			}
			else_if = { 
				limit = { 
					AND = { 
						is_variable_equal = { 
							which = adx
							value = 9
						}
					}
				}
				change_variable = { 
					which = azu
					value = 2
				}
			}
			else_if = { 
				limit = { 
					AND = { 
						is_variable_equal = { 
							which = adz
							value = 9
						}
					}
				}
				change_variable = { 
					which = azv
					value = 2
				}
			}
			else_if = { 
				limit = { 
					AND = { 
						is_variable_equal = { 
							which = aeb
							value = 9
						}
					}
				}
				change_variable = { 
					which = azw
					value = 2
				}
			}
			else_if = { 
				limit = { 
					AND = { 
						is_variable_equal = { 
							which = aed
							value = 9
						}
					}
				}
				change_variable = { 
					which = azx
					value = 2
				}
			}
			else_if = { 
				limit = { 
					AND = { 
						is_variable_equal = { 
							which = aef
							value = 9
						}
					}
				}
				change_variable = { 
					which = azy
					value = 2
				}
			}
		}
	}
	option = { 
		name = "DG_Orthodox.002.optb"
		trigger = { 
			owner = { 
				AND = { 
					check_variable = { 
						which = kpf
						value = 2
					}
				}
			}
			has_owner_religion = yes
			OR = { 
				is_capital = yes
				has_province_modifier = orthodox_patriarchate
				base_production = 10
			}
		}
		ai_chance = { 
			factor = 40
		}
		set_province_flag = cenobitic_monastery
		add_province_modifier = { 
			name = cenobitic_monastery
			duration = -1
			hidden = yes
		}
		every_neighbor_province = { 
			limit = { 
				owned_by = ROOT
			}
			every_neighbor_province = { 
				limit = { 
					owned_by = ROOT
					NOT = { 
						has_province_modifier = cenobitic_monastery
					}
				}
				every_neighbor_province = { 
					limit = { 
						owned_by = ROOT
						base_production = 2
						NOT = { 
							has_province_modifier = cenobitic_monastery
						}
						NOT = { 
							has_province_modifier = stavropegic_monastery
						}
						OR = { 
							religion = orthodox
							is_colony = yes
							has_empty_adjacent_province = yes
						}
					}
					set_province_flag = cenobitic_monastery
					add_permanent_province_modifier = { 
						name = cenobitic_monastery
						duration = -1
						hidden = yes
					}
				}
			}
		}
	}
	option = { 
		name = "DG_Orthodox.002.optc"
		trigger = { 
			owner = { 
				AND = { 
					check_variable = { 
						which = kpf
						value = 3
					}
				}
			}
			OR = { 
				has_owner_religion = yes
				is_colony = yes
			}
		}
		ai_chance = { 
			factor = 25
		}
		set_province_flag = lavra_monastery
		add_permanent_province_modifier = { 
			name = lavra_monastery
			duration = -1
			hidden = yes
		}
	}
	option = { 
		name = "DG_Orthodox.002.optd"
		trigger = { 
			owner = { 
				AND = { 
					check_variable = { 
						which = kpf
						value = 4
					}
				}
			}
			OR = { 
				has_owner_religion = no
				is_colony = yes
				has_empty_adjacent_province = yes
			}
			NOT = { 
				base_production = 3
			}
		}
		ai_chance = { 
			factor = 25
		}
		set_province_flag = anchorite_hermitage
		add_permanent_province_modifier = { 
			name = anchorite_hermitage
			duration = -1
			hidden = yes
		}
	}
	option = { 
		name = "DG_Orthodox.002.opte"
		ai_chance = { 
			factor = 5
			modifier = { 
				owner = { 
					manpower_percentage = 0.80
				}
				factor = 0.7
			}
			modifier = { 
				owner = { 
					manpower_percentage = 1.00
				}
				factor = 0.7
			}
			modifier = { 
				owner = { 
					NOT = { 
						manpower_percentage = 0.50
					}
				}
				factor = 1.4
			}
			modifier = { 
				owner = { 
					NOT = { 
						manpower_percentage = 0.25
					}
				}
				factor = 1.4
			}
			modifier = { 
				owner = { 
					NOT = { 
						manpower_percentage = 0.10
					}
				}
				factor = 1.4
			}
			modifier = { 
				owner = { 
					NOT = { 
						manpower_percentage = 0.05
					}
				}
				factor = 1.4
			}
			modifier = { 
				owner = { 
					piety = 0.60
				}
				factor = 0
			}
			modifier = { 
				owner = { 
					piety = 0.20
				}
				factor = 0.7
			}
			modifier = { 
				owner = { 
					NOT = { 
						piety = -0.20
					}
				}
				factor = 1.4
			}
		}
		owner = { 
			if = { 
				limit = { 
					piety = 0.60
				}
				add_prestige = -8
			}
			else_if = { 
				limit = { 
					piety = 0.20
				}
				add_prestige = -6
			}
			else_if = { 
				limit = { 
					piety = -0.20
				}
				add_prestige = -4
			}
			else_if = { 
				limit = { 
					piety = -0.60
				}
				add_prestige = -2
			}
		}
	}
}
province_event = { 
	id = DG_Orthodox.003
	title = "DG_Orthodox.003.title"
	desc = "DG_Orthodox.003.desc"
	picture = all_mischief
	is_triggered_only = yes
	immediate = { 
		owner = { 
			set_country_flag = holy_fool
		}
	}
	option = { 
		name = "DG_Orthodox.003.opta"
		ai_chance = { 
			factor = 40
		}
		set_province_flag = anchorite_hermitage
		add_permanent_province_modifier = { 
			name = anchorite_hermitage
			duration = -1
			hidden = yes
		}
	}
	option = { 
		name = "DG_Orthodox.003.optb"
		ai_chance = { 
			factor = 40
			modifier = { 
				owner = { 
					NOT = { 
						treasury = 50
					}
				}
				factor = 0.5
			}
			modifier = { 
				owner = { 
					is_bankrupt = yes
				}
				factor = 0
			}
			modifier = { 
				owner = { 
					num_of_loans = 1
				}
				factor = 0.7
			}
			modifier = { 
				owner = { 
					num_of_loans = 2
				}
				factor = 0.7
			}
			modifier = { 
				owner = { 
					treasury = 100
				}
				factor = 1.4
			}
			modifier = { 
				owner = { 
					treasury = 250
				}
				factor = 1.4
			}
		}
		owner = { 
			add_treasury = -50
		}
		if = { 
			limit = { 
				AND = { 
					is_variable_equal = { 
						which = adv
						value = 9
					}
				}
			}
			change_variable = { 
				which = azt
				value = 5
			}
		}
		else_if = { 
			limit = { 
				AND = { 
					is_variable_equal = { 
						which = adx
						value = 9
					}
				}
			}
			change_variable = { 
				which = azu
				value = 5
			}
		}
		else_if = { 
			limit = { 
				AND = { 
					is_variable_equal = { 
						which = adz
						value = 9
					}
				}
			}
			change_variable = { 
				which = azv
				value = 5
			}
		}
		else_if = { 
			limit = { 
				AND = { 
					is_variable_equal = { 
						which = aeb
						value = 9
					}
				}
			}
			change_variable = { 
				which = azw
				value = 5
			}
		}
		else_if = { 
			limit = { 
				AND = { 
					is_variable_equal = { 
						which = aed
						value = 9
					}
				}
			}
			change_variable = { 
				which = azx
				value = 5
			}
		}
		else_if = { 
			limit = { 
				AND = { 
					is_variable_equal = { 
						which = aef
						value = 9
					}
				}
			}
			change_variable = { 
				which = azy
				value = 5
			}
		}
	}
	option = { 
		name = "DG_Orthodox.003.optc"
		ai_chance = { 
			factor = 20
			modifier = { 
				unrest = 1
				factor = 1.4
			}
			modifier = { 
				unrest = 5
				factor = 1.4
			}
			modifier = { 
				owner = { 
					patriarch_authority = 0.80
				}
				factor = 1.4
			}
			modifier = { 
				owner = { 
					patriarch_authority = 0.60
				}
				factor = 1.4
			}
		}
		add_province_modifier = { 
			name = religious_scandal_province
			duration = 730
		}
	}
}
province_event = { 
	id = DG_Orthodox.004
	title = "DG_Orthodox.004.title"
	desc = "DG_Orthodox.004.desc"
	picture = catholic_monastic_town
	is_triggered_only = yes
	option = { 
		name = "DG_Orthodox.004.opta"
		goto = ROOT
		set_province_flag = monastic_town
		add_permanent_province_modifier = { 
			name = monastic_town
			duration = -1
			hidden = yes
		}
	}
}
province_event = { 
	id = DG_Orthodox.005
	title = "DG_Orthodox.005.title"
	desc = "DG_Orthodox.005.desc"
	picture = orthodox_metropolitan
	is_triggered_only = yes
	option = { 
		name = "DG_Orthodox.005.opta"
		trigger = { 
			owner = { 
				NOT = { 
					any_owned_province = { 
						has_province_modifier = orthodox_metropolitan
					}
				}
			}
		}
		set_province_flag = orthodox_metropolitan
		add_permanent_province_modifier = { 
			name = orthodox_metropolitan
			duration = -1
			hidden = yes
		}
	}
	option = { 
		name = "DG_Orthodox.005.opta"
		trigger = { 
			has_province_modifier = orthodox_metropolitan
		}
		ai_chance = { 
			factor = 40
		}
		add_province_modifier = { 
			name = effective_bishop
			duration = 5000
			hidden = yes
		}
	}
	option = { 
		name = "DG_Orthodox.005.optb"
		trigger = { 
			has_province_modifier = orthodox_metropolitan
		}
		ai_chance = { 
			factor = 30
			modifier = { 
				owner = { 
					NOT = { 
						legitimacy = 100
					}
				}
				factor = 1.4
			}
			modifier = { 
				owner = { 
					NOT = { 
						legitimacy = 80
					}
				}
				factor = 1.4
			}
			modifier = { 
				owner = { 
					NOT = { 
						legitimacy = 60
					}
				}
				factor = 1.4
			}
			modifier = { 
				owner = { 
					NOT = { 
						legitimacy = 40
					}
				}
				factor = 1.4
			}
			modifier = { 
				owner = { 
					NOT = { 
						legitimacy = 20
					}
				}
				factor = 1.4
			}
			modifier = { 
				owner = { 
					NOT = { 
						stability = 0
					}
				}
				factor = 1.4
			}
			modifier = { 
				owner = { 
					NOT = { 
						stability = -1
					}
				}
				factor = 1.4
			}
			modifier = { 
				owner = { 
					NOT = { 
						stability = -2
					}
				}
				factor = 1.4
			}
		}
		add_province_modifier = { 
			name = effective_bishop
			duration = 1000
			hidden = yes
		}
		owner = { 
			if = { 
				limit = { 
					piety = 0.60
				}
				add_legitimacy = 4
			}
			else_if = { 
				limit = { 
					piety = 0.20
				}
				add_legitimacy = 3
			}
			else_if = { 
				limit = { 
					piety = -0.20
				}
				add_legitimacy = 2
			}
			else_if = { 
				limit = { 
					piety = -0.60
				}
				add_legitimacy = 1
			}
			if = { 
				limit = { 
					NOT = { 
						stability = 0
					}
				}
				if = { 
					limit = { 
						piety = 0.60
					}
					random = { 
						chance = 20
						hidden_effect = { 
							change_variable = { 
								which = ahf
								value = 600
							}
							if = { 
								limit = { 
									AND = { 
										check_variable = { 
											which = ahf
											value = 1200
										}
									}
								}
								if = { 
									limit = { 
										stability = 3
									}
									set_variable = { 
										which = ahf
										value = 1200
									}
								}
								else = { 
									subtract_variable = { 
										which = ahf
										value = 1200
									}
									add_stability = 1
								}
							}
							else_if = { 
								limit = { 
									NOT = { 
										AND = { 
											check_variable = { 
												which = ahf
												value = 0
											}
										}
									}
								}
								if = { 
									limit = { 
										NOT = { 
											stability = -2
										}
									}
									set_variable = { 
										which = ahf
										value = 0
									}
								}
								else = { 
									change_variable = { 
										which = ahf
										value = 1200
									}
									add_stability = -1
								}
							}
							set_variable = { 
								which = ahd
								which = ahf
							}
							divide_variable = { 
								which = ahd
								value = 12
							}
							multiply_variable = { 
								which = ahd
								value = 0.1
							}
							multiply_variable = { 
								which = ahd
								value = 10
							}
							set_variable = { 
								which = lsc
								value = 100
							}
							subtract_variable = { 
								which = lsc
								which = ahd
							}
						}
						custom_tooltip = POP_StabAdd50
						if = { 
							limit = { 
								is_emperor_of_china = yes
							}
							add_mandate = 2.5
						}
					}
				}
				else_if = { 
					limit = { 
						piety = 0.20
					}
					random = { 
						chance = 15
						hidden_effect = { 
							change_variable = { 
								which = ahf
								value = 600
							}
							if = { 
								limit = { 
									AND = { 
										check_variable = { 
											which = ahf
											value = 1200
										}
									}
								}
								if = { 
									limit = { 
										stability = 3
									}
									set_variable = { 
										which = ahf
										value = 1200
									}
								}
								else = { 
									subtract_variable = { 
										which = ahf
										value = 1200
									}
									add_stability = 1
								}
							}
							else_if = { 
								limit = { 
									NOT = { 
										AND = { 
											check_variable = { 
												which = ahf
												value = 0
											}
										}
									}
								}
								if = { 
									limit = { 
										NOT = { 
											stability = -2
										}
									}
									set_variable = { 
										which = ahf
										value = 0
									}
								}
								else = { 
									change_variable = { 
										which = ahf
										value = 1200
									}
									add_stability = -1
								}
							}
							set_variable = { 
								which = ahd
								which = ahf
							}
							divide_variable = { 
								which = ahd
								value = 12
							}
							multiply_variable = { 
								which = ahd
								value = 0.1
							}
							multiply_variable = { 
								which = ahd
								value = 10
							}
							set_variable = { 
								which = lsc
								value = 100
							}
							subtract_variable = { 
								which = lsc
								which = ahd
							}
						}
						custom_tooltip = POP_StabAdd50
						if = { 
							limit = { 
								is_emperor_of_china = yes
							}
							add_mandate = 2.5
						}
					}
				}
				else_if = { 
					limit = { 
						piety = -0.20
					}
					random = { 
						chance = 10
						hidden_effect = { 
							change_variable = { 
								which = ahf
								value = 600
							}
							if = { 
								limit = { 
									AND = { 
										check_variable = { 
											which = ahf
											value = 1200
										}
									}
								}
								if = { 
									limit = { 
										stability = 3
									}
									set_variable = { 
										which = ahf
										value = 1200
									}
								}
								else = { 
									subtract_variable = { 
										which = ahf
										value = 1200
									}
									add_stability = 1
								}
							}
							else_if = { 
								limit = { 
									NOT = { 
										AND = { 
											check_variable = { 
												which = ahf
												value = 0
											}
										}
									}
								}
								if = { 
									limit = { 
										NOT = { 
											stability = -2
										}
									}
									set_variable = { 
										which = ahf
										value = 0
									}
								}
								else = { 
									change_variable = { 
										which = ahf
										value = 1200
									}
									add_stability = -1
								}
							}
							set_variable = { 
								which = ahd
								which = ahf
							}
							divide_variable = { 
								which = ahd
								value = 12
							}
							multiply_variable = { 
								which = ahd
								value = 0.1
							}
							multiply_variable = { 
								which = ahd
								value = 10
							}
							set_variable = { 
								which = lsc
								value = 100
							}
							subtract_variable = { 
								which = lsc
								which = ahd
							}
						}
						custom_tooltip = POP_StabAdd50
						if = { 
							limit = { 
								is_emperor_of_china = yes
							}
							add_mandate = 2.5
						}
					}
				}
				else_if = { 
					limit = { 
						piety = -0.60
					}
					random = { 
						chance = 5
						hidden_effect = { 
							change_variable = { 
								which = ahf
								value = 600
							}
							if = { 
								limit = { 
									AND = { 
										check_variable = { 
											which = ahf
											value = 1200
										}
									}
								}
								if = { 
									limit = { 
										stability = 3
									}
									set_variable = { 
										which = ahf
										value = 1200
									}
								}
								else = { 
									subtract_variable = { 
										which = ahf
										value = 1200
									}
									add_stability = 1
								}
							}
							else_if = { 
								limit = { 
									NOT = { 
										AND = { 
											check_variable = { 
												which = ahf
												value = 0
											}
										}
									}
								}
								if = { 
									limit = { 
										NOT = { 
											stability = -2
										}
									}
									set_variable = { 
										which = ahf
										value = 0
									}
								}
								else = { 
									change_variable = { 
										which = ahf
										value = 1200
									}
									add_stability = -1
								}
							}
							set_variable = { 
								which = ahd
								which = ahf
							}
							divide_variable = { 
								which = ahd
								value = 12
							}
							multiply_variable = { 
								which = ahd
								value = 0.1
							}
							multiply_variable = { 
								which = ahd
								value = 10
							}
							set_variable = { 
								which = lsc
								value = 100
							}
							subtract_variable = { 
								which = lsc
								which = ahd
							}
						}
						custom_tooltip = POP_StabAdd50
						if = { 
							limit = { 
								is_emperor_of_china = yes
							}
							add_mandate = 2.5
						}
					}
				}
			}
		}
	}
	option = { 
		name = "DG_Orthodox.005.optc"
		trigger = { 
			has_province_modifier = orthodox_metropolitan
		}
		ai_chance = { 
			factor = 30
			modifier = { 
				owner = { 
					any_owned_province = { 
						culture = ROOT
						NOT = { 
							religion = orthodox
						}
					}
				}
				factor = 2
			}
		}
		add_province_modifier = { 
			name = effective_bishop
			duration = 1000
			hidden = yes
		}
		owner = { 
			add_piety = 0.20
			if = { 
				limit = { 
					piety = 0.60
				}
				add_country_modifier = { 
					name = religious_intolerance
					duration = 4000
				}
			}
			else_if = { 
				limit = { 
					piety = 0.20
				}
				add_country_modifier = { 
					name = religious_intolerance
					duration = 2000
				}
			}
			else_if = { 
				limit = { 
					piety = -0.20
				}
				add_country_modifier = { 
					name = religious_intolerance
					duration = 1000
				}
			}
			else_if = { 
				limit = { 
					piety = -0.60
				}
				add_country_modifier = { 
					name = religious_intolerance
					duration = 500
				}
			}
		}
		owner = { 
			random_owned_province = { 
				limit = { 
					culture = ROOT
					NOT = { 
						religion = orthodox
					}
				}
				if = { 
					limit = { 
						NOT = { 
							AND = { 
								is_variable_equal = { 
									which = adv
									value = 9
								}
							}
							AND = { 
								is_variable_equal = { 
									which = adx
									value = 9
								}
							}
							AND = { 
								is_variable_equal = { 
									which = adz
									value = 9
								}
							}
							AND = { 
								is_variable_equal = { 
									which = aeb
									value = 9
								}
							}
							AND = { 
								is_variable_equal = { 
									which = aed
									value = 9
								}
							}
							AND = { 
								is_variable_equal = { 
									which = aef
									value = 9
								}
							}
						}
					}
					set_variable = { 
						which = qae
						value = 9
					}
					province_event = { 
						id = DG_Convert.903
					}
					set_variable = { 
						which = qae
						value = 0
					}
				}
				if = { 
					limit = { 
						AND = { 
							is_variable_equal = { 
								which = aaw
								value = 0
							}
						}
					}
					set_variable = { 
						which = awp
						value = 0
					}
					set_variable = { 
						which = aws
						value = 0
					}
					set_variable = { 
						which = awv
						value = 0
					}
					set_variable = { 
						which = awy
						value = 0
					}
					set_variable = { 
						which = axb
						value = 0
					}
					set_variable = { 
						which = axe
						value = 0
					}
				}
				if = { 
					limit = { 
						AND = { 
							is_variable_equal = { 
								which = aax
								value = 0
							}
						}
					}
					set_variable = { 
						which = awq
						value = 0
					}
					set_variable = { 
						which = awt
						value = 0
					}
					set_variable = { 
						which = aww
						value = 0
					}
					set_variable = { 
						which = awz
						value = 0
					}
					set_variable = { 
						which = axc
						value = 0
					}
					set_variable = { 
						which = axf
						value = 0
					}
				}
				if = { 
					limit = { 
						AND = { 
							is_variable_equal = { 
								which = aay
								value = 0
							}
						}
					}
					set_variable = { 
						which = awr
						value = 0
					}
					set_variable = { 
						which = awu
						value = 0
					}
					set_variable = { 
						which = awx
						value = 0
					}
					set_variable = { 
						which = axa
						value = 0
					}
					set_variable = { 
						which = axd
						value = 0
					}
					set_variable = { 
						which = axg
						value = 0
					}
				}
				set_variable = { 
					which = ked
					which = awp
				}
				change_variable = { 
					which = ked
					which = aws
				}
				change_variable = { 
					which = ked
					which = awv
				}
				change_variable = { 
					which = ked
					which = awy
				}
				change_variable = { 
					which = ked
					which = axb
				}
				change_variable = { 
					which = ked
					which = axe
				}
				if = { 
					limit = { 
						NOT = { 
							AND = { 
								is_variable_equal = { 
									which = ked
									which = aaw
								}
							}
						}
					}
					if = { 
						limit = { 
							AND = { 
								check_variable = { 
									which = ked
									value = 0.001
								}
							}
						}
						divide_variable = { 
							which = ked
							which = aaw
						}
					}
					if = { 
						limit = { 
							AND = { 
								check_variable = { 
									which = awp
									value = 0.001
								}
							}
						}
						divide_variable = { 
							which = awp
							which = ked
						}
					}
					if = { 
						limit = { 
							AND = { 
								check_variable = { 
									which = aws
									value = 0.001
								}
							}
						}
						divide_variable = { 
							which = aws
							which = ked
						}
					}
					if = { 
						limit = { 
							AND = { 
								check_variable = { 
									which = awv
									value = 0.001
								}
							}
						}
						divide_variable = { 
							which = awv
							which = ked
						}
					}
					if = { 
						limit = { 
							AND = { 
								check_variable = { 
									which = awy
									value = 0.001
								}
							}
						}
						divide_variable = { 
							which = awy
							which = ked
						}
					}
					if = { 
						limit = { 
							AND = { 
								check_variable = { 
									which = axb
									value = 0.001
								}
							}
						}
						divide_variable = { 
							which = axb
							which = ked
						}
					}
					if = { 
						limit = { 
							AND = { 
								check_variable = { 
									which = axe
									value = 0.001
								}
							}
						}
						divide_variable = { 
							which = axe
							which = ked
						}
					}
				}
				set_variable = { 
					which = kee
					which = awq
				}
				change_variable = { 
					which = kee
					which = awt
				}
				change_variable = { 
					which = kee
					which = aww
				}
				change_variable = { 
					which = kee
					which = awz
				}
				change_variable = { 
					which = kee
					which = axc
				}
				change_variable = { 
					which = kee
					which = axf
				}
				if = { 
					limit = { 
						NOT = { 
							AND = { 
								is_variable_equal = { 
									which = kee
									which = aax
								}
							}
						}
					}
					if = { 
						limit = { 
							AND = { 
								check_variable = { 
									which = kee
									value = 0.001
								}
							}
						}
						divide_variable = { 
							which = kee
							which = aax
						}
					}
					if = { 
						limit = { 
							AND = { 
								check_variable = { 
									which = awq
									value = 0.001
								}
							}
						}
						divide_variable = { 
							which = awq
							which = kee
						}
					}
					if = { 
						limit = { 
							AND = { 
								check_variable = { 
									which = awt
									value = 0.001
								}
							}
						}
						divide_variable = { 
							which = awt
							which = kee
						}
					}
					if = { 
						limit = { 
							AND = { 
								check_variable = { 
									which = aww
									value = 0.001
								}
							}
						}
						divide_variable = { 
							which = aww
							which = kee
						}
					}
					if = { 
						limit = { 
							AND = { 
								check_variable = { 
									which = awz
									value = 0.001
								}
							}
						}
						divide_variable = { 
							which = awz
							which = kee
						}
					}
					if = { 
						limit = { 
							AND = { 
								check_variable = { 
									which = axc
									value = 0.001
								}
							}
						}
						divide_variable = { 
							which = axc
							which = kee
						}
					}
					if = { 
						limit = { 
							AND = { 
								check_variable = { 
									which = axf
									value = 0.001
								}
							}
						}
						divide_variable = { 
							which = axf
							which = kee
						}
					}
				}
				set_variable = { 
					which = kef
					which = awr
				}
				change_variable = { 
					which = kef
					which = awu
				}
				change_variable = { 
					which = kef
					which = awx
				}
				change_variable = { 
					which = kef
					which = axa
				}
				change_variable = { 
					which = kef
					which = axd
				}
				change_variable = { 
					which = kef
					which = axg
				}
				if = { 
					limit = { 
						NOT = { 
							AND = { 
								is_variable_equal = { 
									which = kef
									which = aay
								}
							}
						}
					}
					if = { 
						limit = { 
							AND = { 
								check_variable = { 
									which = kef
									value = 0.001
								}
							}
						}
						divide_variable = { 
							which = kef
							which = aay
						}
					}
					if = { 
						limit = { 
							AND = { 
								check_variable = { 
									which = awr
									value = 0.001
								}
							}
						}
						divide_variable = { 
							which = awr
							which = kef
						}
					}
					if = { 
						limit = { 
							AND = { 
								check_variable = { 
									which = awu
									value = 0.001
								}
							}
						}
						divide_variable = { 
							which = awu
							which = kef
						}
					}
					if = { 
						limit = { 
							AND = { 
								check_variable = { 
									which = awx
									value = 0.001
								}
							}
						}
						divide_variable = { 
							which = awx
							which = kef
						}
					}
					if = { 
						limit = { 
							AND = { 
								check_variable = { 
									which = axa
									value = 0.001
								}
							}
						}
						divide_variable = { 
							which = axa
							which = kef
						}
					}
					if = { 
						limit = { 
							AND = { 
								check_variable = { 
									which = axd
									value = 0.001
								}
							}
						}
						divide_variable = { 
							which = axd
							which = kef
						}
					}
					if = { 
						limit = { 
							AND = { 
								check_variable = { 
									which = axg
									value = 0.001
								}
							}
						}
						divide_variable = { 
							which = axg
							which = kef
						}
					}
				}
				if = { 
					limit = { 
						AND = { 
							check_variable = { 
								which = adv
								value = 1
							}
						}
					}
					set_variable = { 
						which = ayl
						which = awp
					}
					change_variable = { 
						which = ayl
						which = awq
					}
					change_variable = { 
						which = ayl
						which = awr
					}
					set_variable = { 
						which = ayr
						which = ayl
					}
					if = { 
						limit = { 
							AND = { 
								check_variable = { 
									which = ayr
									value = 0.001
								}
							}
						}
						divide_variable = { 
							which = ayr
							which = aaz
						}
						multiply_variable = { 
							which = ayr
							value = 100
						}
					}
				}
				if = { 
					limit = { 
						AND = { 
							check_variable = { 
								which = adx
								value = 1
							}
						}
					}
					set_variable = { 
						which = aym
						which = aws
					}
					change_variable = { 
						which = aym
						which = awt
					}
					change_variable = { 
						which = aym
						which = awu
					}
					set_variable = { 
						which = ays
						which = aym
					}
					if = { 
						limit = { 
							AND = { 
								check_variable = { 
									which = ays
									value = 0.001
								}
							}
						}
						divide_variable = { 
							which = ays
							which = aaz
						}
						multiply_variable = { 
							which = ays
							value = 100
						}
					}
				}
				if = { 
					limit = { 
						AND = { 
							check_variable = { 
								which = adz
								value = 1
							}
						}
					}
					set_variable = { 
						which = ayn
						which = awv
					}
					change_variable = { 
						which = ayn
						which = aww
					}
					change_variable = { 
						which = ayn
						which = awx
					}
					set_variable = { 
						which = ayt
						which = ayn
					}
					if = { 
						limit = { 
							AND = { 
								check_variable = { 
									which = ayt
									value = 0.001
								}
							}
						}
						divide_variable = { 
							which = ayt
							which = aaz
						}
						multiply_variable = { 
							which = ayt
							value = 100
						}
					}
				}
				if = { 
					limit = { 
						AND = { 
							check_variable = { 
								which = aeb
								value = 1
							}
						}
					}
					set_variable = { 
						which = ayo
						which = awy
					}
					change_variable = { 
						which = ayo
						which = awz
					}
					change_variable = { 
						which = ayo
						which = axa
					}
					set_variable = { 
						which = ayu
						which = ayo
					}
					if = { 
						limit = { 
							AND = { 
								check_variable = { 
									which = ayu
									value = 0.001
								}
							}
						}
						divide_variable = { 
							which = ayu
							which = aaz
						}
						multiply_variable = { 
							which = ayu
							value = 100
						}
					}
				}
				if = { 
					limit = { 
						AND = { 
							check_variable = { 
								which = aed
								value = 1
							}
						}
					}
					set_variable = { 
						which = ayp
						which = axb
					}
					change_variable = { 
						which = ayp
						which = axc
					}
					change_variable = { 
						which = ayp
						which = axd
					}
					set_variable = { 
						which = ayv
						which = ayp
					}
					if = { 
						limit = { 
							AND = { 
								check_variable = { 
									which = ayv
									value = 0.001
								}
							}
						}
						divide_variable = { 
							which = ayv
							which = aaz
						}
						multiply_variable = { 
							which = ayv
							value = 100
						}
					}
				}
				if = { 
					limit = { 
						AND = { 
							check_variable = { 
								which = aef
								value = 1
							}
						}
					}
					set_variable = { 
						which = ayq
						which = axe
					}
					change_variable = { 
						which = ayq
						which = axf
					}
					change_variable = { 
						which = ayq
						which = axg
					}
					set_variable = { 
						which = ayw
						which = ayq
					}
					if = { 
						limit = { 
							AND = { 
								check_variable = { 
									which = ayw
									value = 0.001
								}
							}
						}
						divide_variable = { 
							which = ayw
							which = aaz
						}
						multiply_variable = { 
							which = ayw
							value = 100
						}
					}
				}
				if = { 
					limit = { 
						AND = { 
							is_variable_equal = { 
								which = adv
								which = adv
							}
						}
					}
					set_variable = { 
						which = kdu
						which = awp
					}
					set_variable = { 
						which = kdv
						which = awq
					}
					set_variable = { 
						which = kdw
						which = awr
					}
				}
				else_if = { 
					limit = { 
						AND = { 
							is_variable_equal = { 
								which = adx
								which = adv
							}
						}
					}
					set_variable = { 
						which = kdu
						which = aws
					}
					set_variable = { 
						which = kdv
						which = awt
					}
					set_variable = { 
						which = kdw
						which = awu
					}
				}
				else_if = { 
					limit = { 
						AND = { 
							is_variable_equal = { 
								which = adz
								which = adv
							}
						}
					}
					set_variable = { 
						which = kdu
						which = awv
					}
					set_variable = { 
						which = kdv
						which = aww
					}
					set_variable = { 
						which = kdw
						which = awx
					}
				}
				else_if = { 
					limit = { 
						AND = { 
							is_variable_equal = { 
								which = aeb
								which = adv
							}
						}
					}
					set_variable = { 
						which = kdu
						which = awy
					}
					set_variable = { 
						which = kdv
						which = awz
					}
					set_variable = { 
						which = kdw
						which = axa
					}
				}
				else_if = { 
					limit = { 
						AND = { 
							is_variable_equal = { 
								which = aed
								which = adv
							}
						}
					}
					set_variable = { 
						which = kdu
						which = axb
					}
					set_variable = { 
						which = kdv
						which = axc
					}
					set_variable = { 
						which = kdw
						which = axd
					}
				}
				else_if = { 
					limit = { 
						AND = { 
							is_variable_equal = { 
								which = aef
								which = adv
							}
						}
					}
					set_variable = { 
						which = kdu
						which = axe
					}
					set_variable = { 
						which = kdv
						which = axf
					}
					set_variable = { 
						which = kdw
						which = axg
					}
				}
				multiply_variable = { 
					which = kdu
					value = 0.10
				}
				multiply_variable = { 
					which = kdv
					value = 0.10
				}
				multiply_variable = { 
					which = kdw
					value = 0.10
				}
				if = { 
					limit = { 
						AND = { 
							is_variable_equal = { 
								which = adv
								which = adv
							}
						}
					}
					if = { 
						limit = { 
							AND = { 
								check_variable = { 
									which = awp
									which = kdu
								}
							}
						}
						subtract_variable = { 
							which = awp
							which = kdu
						}
					}
					else = { 
						set_variable = { 
							which = kdu
							which = awp
						}
						set_variable = { 
							which = awp
							value = 0
						}
					}
					if = { 
						limit = { 
							AND = { 
								check_variable = { 
									which = awq
									which = kdv
								}
							}
						}
						subtract_variable = { 
							which = awq
							which = kdv
						}
					}
					else = { 
						set_variable = { 
							which = kdv
							which = awq
						}
						set_variable = { 
							which = awq
							value = 0
						}
					}
					if = { 
						limit = { 
							AND = { 
								check_variable = { 
									which = awr
									which = kdw
								}
							}
						}
						subtract_variable = { 
							which = awr
							which = kdw
						}
					}
					else = { 
						set_variable = { 
							which = kdw
							which = awr
						}
						set_variable = { 
							which = awr
							value = 0
						}
					}
					set_variable = { 
						which = aeh
						which = awp
					}
					set_variable = { 
						which = aei
						which = awq
					}
					set_variable = { 
						which = adw
						which = awr
					}
					if = { 
						limit = { 
							OR = { 
								AND = { 
									is_variable_equal = { 
										which = aaw
										value = 0
									}
								}
								NOT = { 
									AND = { 
										check_variable = { 
											which = aeh
											value = 0.001
										}
									}
								}
							}
						}
						set_variable = { 
							which = aeh
							value = 0
						}
					}
					else = { 
						divide_variable = { 
							which = aeh
							which = aaw
						}
					}
					if = { 
						limit = { 
							OR = { 
								AND = { 
									is_variable_equal = { 
										which = aax
										value = 0
									}
								}
								NOT = { 
									AND = { 
										check_variable = { 
											which = aei
											value = 0.001
										}
									}
								}
							}
						}
						set_variable = { 
							which = aei
							value = 0
						}
					}
					else = { 
						divide_variable = { 
							which = aei
							which = aax
						}
					}
					if = { 
						limit = { 
							OR = { 
								AND = { 
									is_variable_equal = { 
										which = aay
										value = 0
									}
								}
								NOT = { 
									AND = { 
										check_variable = { 
											which = adw
											value = 0.001
										}
									}
								}
							}
						}
						set_variable = { 
							which = adw
							value = 0
						}
					}
					else = { 
						divide_variable = { 
							which = adw
							which = aay
						}
					}
					set_variable = { 
						which = axh
						which = aeh
					}
					set_variable = { 
						which = axi
						which = aei
					}
					set_variable = { 
						which = axj
						which = adw
					}
					multiply_variable = { 
						which = axh
						value = 100
					}
					multiply_variable = { 
						which = axi
						value = 100
					}
					multiply_variable = { 
						which = axj
						value = 100
					}
					set_variable = { 
						which = ayl
						which = awp
					}
					change_variable = { 
						which = ayl
						which = awq
					}
					change_variable = { 
						which = ayl
						which = awr
					}
					set_variable = { 
						which = ayr
						which = ayl
					}
					if = { 
						limit = { 
							AND = { 
								check_variable = { 
									which = ayr
									value = 0.001
								}
							}
						}
						divide_variable = { 
							which = ayr
							which = aaz
						}
						multiply_variable = { 
							which = ayr
							value = 100
						}
					}
				}
				else_if = { 
					limit = { 
						AND = { 
							is_variable_equal = { 
								which = adx
								which = adv
							}
						}
					}
					if = { 
						limit = { 
							AND = { 
								check_variable = { 
									which = aws
									which = kdu
								}
							}
						}
						subtract_variable = { 
							which = aws
							which = kdu
						}
					}
					else = { 
						set_variable = { 
							which = kdu
							which = aws
						}
						set_variable = { 
							which = aws
							value = 0
						}
					}
					if = { 
						limit = { 
							AND = { 
								check_variable = { 
									which = awt
									which = kdv
								}
							}
						}
						subtract_variable = { 
							which = awt
							which = kdv
						}
					}
					else = { 
						set_variable = { 
							which = kdv
							which = awt
						}
						set_variable = { 
							which = awt
							value = 0
						}
					}
					if = { 
						limit = { 
							AND = { 
								check_variable = { 
									which = awu
									which = kdw
								}
							}
						}
						subtract_variable = { 
							which = awu
							which = kdw
						}
					}
					else = { 
						set_variable = { 
							which = kdw
							which = awu
						}
						set_variable = { 
							which = awu
							value = 0
						}
					}
					set_variable = { 
						which = aej
						which = aws
					}
					set_variable = { 
						which = aek
						which = awt
					}
					set_variable = { 
						which = ady
						which = awu
					}
					if = { 
						limit = { 
							OR = { 
								AND = { 
									is_variable_equal = { 
										which = aaw
										value = 0
									}
								}
								NOT = { 
									AND = { 
										check_variable = { 
											which = aej
											value = 0.001
										}
									}
								}
							}
						}
						set_variable = { 
							which = aej
							value = 0
						}
					}
					else = { 
						divide_variable = { 
							which = aej
							which = aaw
						}
					}
					if = { 
						limit = { 
							OR = { 
								AND = { 
									is_variable_equal = { 
										which = aax
										value = 0
									}
								}
								NOT = { 
									AND = { 
										check_variable = { 
											which = aek
											value = 0.001
										}
									}
								}
							}
						}
						set_variable = { 
							which = aek
							value = 0
						}
					}
					else = { 
						divide_variable = { 
							which = aek
							which = aax
						}
					}
					if = { 
						limit = { 
							OR = { 
								AND = { 
									is_variable_equal = { 
										which = aay
										value = 0
									}
								}
								NOT = { 
									AND = { 
										check_variable = { 
											which = ady
											value = 0.001
										}
									}
								}
							}
						}
						set_variable = { 
							which = ady
							value = 0
						}
					}
					else = { 
						divide_variable = { 
							which = ady
							which = aay
						}
					}
					set_variable = { 
						which = axk
						which = aej
					}
					set_variable = { 
						which = axl
						which = aek
					}
					set_variable = { 
						which = axm
						which = ady
					}
					multiply_variable = { 
						which = axk
						value = 100
					}
					multiply_variable = { 
						which = axl
						value = 100
					}
					multiply_variable = { 
						which = axm
						value = 100
					}
					set_variable = { 
						which = aym
						which = aws
					}
					change_variable = { 
						which = aym
						which = awt
					}
					change_variable = { 
						which = aym
						which = awu
					}
					set_variable = { 
						which = ays
						which = aym
					}
					if = { 
						limit = { 
							AND = { 
								check_variable = { 
									which = ays
									value = 0.001
								}
							}
						}
						divide_variable = { 
							which = ays
							which = aaz
						}
						multiply_variable = { 
							which = ays
							value = 100
						}
					}
				}
				else_if = { 
					limit = { 
						AND = { 
							is_variable_equal = { 
								which = adz
								which = adv
							}
						}
					}
					if = { 
						limit = { 
							AND = { 
								check_variable = { 
									which = awv
									which = kdu
								}
							}
						}
						subtract_variable = { 
							which = awv
							which = kdu
						}
					}
					else = { 
						set_variable = { 
							which = kdu
							which = awv
						}
						set_variable = { 
							which = awv
							value = 0
						}
					}
					if = { 
						limit = { 
							AND = { 
								check_variable = { 
									which = aww
									which = kdv
								}
							}
						}
						subtract_variable = { 
							which = aww
							which = kdv
						}
					}
					else = { 
						set_variable = { 
							which = kdv
							which = aww
						}
						set_variable = { 
							which = aww
							value = 0
						}
					}
					if = { 
						limit = { 
							AND = { 
								check_variable = { 
									which = awx
									which = kdw
								}
							}
						}
						subtract_variable = { 
							which = awx
							which = kdw
						}
					}
					else = { 
						set_variable = { 
							which = kdw
							which = awx
						}
						set_variable = { 
							which = awx
							value = 0
						}
					}
					set_variable = { 
						which = ael
						which = awv
					}
					set_variable = { 
						which = aem
						which = aww
					}
					set_variable = { 
						which = aea
						which = awx
					}
					if = { 
						limit = { 
							OR = { 
								AND = { 
									is_variable_equal = { 
										which = aaw
										value = 0
									}
								}
								NOT = { 
									AND = { 
										check_variable = { 
											which = ael
											value = 0.001
										}
									}
								}
							}
						}
						set_variable = { 
							which = ael
							value = 0
						}
					}
					else = { 
						divide_variable = { 
							which = ael
							which = aaw
						}
					}
					if = { 
						limit = { 
							OR = { 
								AND = { 
									is_variable_equal = { 
										which = aax
										value = 0
									}
								}
								NOT = { 
									AND = { 
										check_variable = { 
											which = aem
											value = 0.001
										}
									}
								}
							}
						}
						set_variable = { 
							which = aem
							value = 0
						}
					}
					else = { 
						divide_variable = { 
							which = aem
							which = aax
						}
					}
					if = { 
						limit = { 
							OR = { 
								AND = { 
									is_variable_equal = { 
										which = aay
										value = 0
									}
								}
								NOT = { 
									AND = { 
										check_variable = { 
											which = aea
											value = 0.001
										}
									}
								}
							}
						}
						set_variable = { 
							which = aea
							value = 0
						}
					}
					else = { 
						divide_variable = { 
							which = aea
							which = aay
						}
					}
					set_variable = { 
						which = axn
						which = ael
					}
					set_variable = { 
						which = axo
						which = aem
					}
					set_variable = { 
						which = axp
						which = aea
					}
					multiply_variable = { 
						which = axn
						value = 100
					}
					multiply_variable = { 
						which = axo
						value = 100
					}
					multiply_variable = { 
						which = axp
						value = 100
					}
					set_variable = { 
						which = ayn
						which = awv
					}
					change_variable = { 
						which = ayn
						which = aww
					}
					change_variable = { 
						which = ayn
						which = awx
					}
					set_variable = { 
						which = ayt
						which = ayn
					}
					if = { 
						limit = { 
							AND = { 
								check_variable = { 
									which = ayt
									value = 0.001
								}
							}
						}
						divide_variable = { 
							which = ayt
							which = aaz
						}
						multiply_variable = { 
							which = ayt
							value = 100
						}
					}
				}
				else_if = { 
					limit = { 
						AND = { 
							is_variable_equal = { 
								which = aeb
								which = adv
							}
						}
					}
					if = { 
						limit = { 
							AND = { 
								check_variable = { 
									which = awy
									which = kdu
								}
							}
						}
						subtract_variable = { 
							which = awy
							which = kdu
						}
					}
					else = { 
						set_variable = { 
							which = kdu
							which = awy
						}
						set_variable = { 
							which = awy
							value = 0
						}
					}
					if = { 
						limit = { 
							AND = { 
								check_variable = { 
									which = awz
									which = kdv
								}
							}
						}
						subtract_variable = { 
							which = awz
							which = kdv
						}
					}
					else = { 
						set_variable = { 
							which = kdv
							which = awz
						}
						set_variable = { 
							which = awz
							value = 0
						}
					}
					if = { 
						limit = { 
							AND = { 
								check_variable = { 
									which = axa
									which = kdw
								}
							}
						}
						subtract_variable = { 
							which = axa
							which = kdw
						}
					}
					else = { 
						set_variable = { 
							which = kdw
							which = axa
						}
						set_variable = { 
							which = axa
							value = 0
						}
					}
					set_variable = { 
						which = aen
						which = awy
					}
					set_variable = { 
						which = aeo
						which = awz
					}
					set_variable = { 
						which = aec
						which = axa
					}
					if = { 
						limit = { 
							OR = { 
								AND = { 
									is_variable_equal = { 
										which = aaw
										value = 0
									}
								}
								NOT = { 
									AND = { 
										check_variable = { 
											which = aen
											value = 0.001
										}
									}
								}
							}
						}
						set_variable = { 
							which = aen
							value = 0
						}
					}
					else = { 
						divide_variable = { 
							which = aen
							which = aaw
						}
					}
					if = { 
						limit = { 
							OR = { 
								AND = { 
									is_variable_equal = { 
										which = aax
										value = 0
									}
								}
								NOT = { 
									AND = { 
										check_variable = { 
											which = aeo
											value = 0.001
										}
									}
								}
							}
						}
						set_variable = { 
							which = aeo
							value = 0
						}
					}
					else = { 
						divide_variable = { 
							which = aeo
							which = aax
						}
					}
					if = { 
						limit = { 
							OR = { 
								AND = { 
									is_variable_equal = { 
										which = aay
										value = 0
									}
								}
								NOT = { 
									AND = { 
										check_variable = { 
											which = aec
											value = 0.001
										}
									}
								}
							}
						}
						set_variable = { 
							which = aec
							value = 0
						}
					}
					else = { 
						divide_variable = { 
							which = aec
							which = aay
						}
					}
					set_variable = { 
						which = axq
						which = aen
					}
					set_variable = { 
						which = axr
						which = aeo
					}
					set_variable = { 
						which = axs
						which = aec
					}
					multiply_variable = { 
						which = axq
						value = 100
					}
					multiply_variable = { 
						which = axr
						value = 100
					}
					multiply_variable = { 
						which = axs
						value = 100
					}
					set_variable = { 
						which = ayo
						which = awy
					}
					change_variable = { 
						which = ayo
						which = awz
					}
					change_variable = { 
						which = ayo
						which = axa
					}
					set_variable = { 
						which = ayu
						which = ayo
					}
					if = { 
						limit = { 
							AND = { 
								check_variable = { 
									which = ayu
									value = 0.001
								}
							}
						}
						divide_variable = { 
							which = ayu
							which = aaz
						}
						multiply_variable = { 
							which = ayu
							value = 100
						}
					}
				}
				else_if = { 
					limit = { 
						AND = { 
							is_variable_equal = { 
								which = aed
								which = adv
							}
						}
					}
					if = { 
						limit = { 
							AND = { 
								check_variable = { 
									which = axb
									which = kdu
								}
							}
						}
						subtract_variable = { 
							which = axb
							which = kdu
						}
					}
					else = { 
						set_variable = { 
							which = kdu
							which = axb
						}
						set_variable = { 
							which = axb
							value = 0
						}
					}
					if = { 
						limit = { 
							AND = { 
								check_variable = { 
									which = axc
									which = kdv
								}
							}
						}
						subtract_variable = { 
							which = axc
							which = kdv
						}
					}
					else = { 
						set_variable = { 
							which = kdv
							which = axc
						}
						set_variable = { 
							which = axc
							value = 0
						}
					}
					if = { 
						limit = { 
							AND = { 
								check_variable = { 
									which = axd
									which = kdw
								}
							}
						}
						subtract_variable = { 
							which = axd
							which = kdw
						}
					}
					else = { 
						set_variable = { 
							which = kdw
							which = axd
						}
						set_variable = { 
							which = axd
							value = 0
						}
					}
					set_variable = { 
						which = aep
						which = axb
					}
					set_variable = { 
						which = aeq
						which = axc
					}
					set_variable = { 
						which = aee
						which = axd
					}
					if = { 
						limit = { 
							OR = { 
								AND = { 
									is_variable_equal = { 
										which = aaw
										value = 0
									}
								}
								NOT = { 
									AND = { 
										check_variable = { 
											which = aep
											value = 0.001
										}
									}
								}
							}
						}
						set_variable = { 
							which = aep
							value = 0
						}
					}
					else = { 
						divide_variable = { 
							which = aep
							which = aaw
						}
					}
					if = { 
						limit = { 
							OR = { 
								AND = { 
									is_variable_equal = { 
										which = aax
										value = 0
									}
								}
								NOT = { 
									AND = { 
										check_variable = { 
											which = aeq
											value = 0.001
										}
									}
								}
							}
						}
						set_variable = { 
							which = aeq
							value = 0
						}
					}
					else = { 
						divide_variable = { 
							which = aeq
							which = aax
						}
					}
					if = { 
						limit = { 
							OR = { 
								AND = { 
									is_variable_equal = { 
										which = aay
										value = 0
									}
								}
								NOT = { 
									AND = { 
										check_variable = { 
											which = aee
											value = 0.001
										}
									}
								}
							}
						}
						set_variable = { 
							which = aee
							value = 0
						}
					}
					else = { 
						divide_variable = { 
							which = aee
							which = aay
						}
					}
					set_variable = { 
						which = axt
						which = aep
					}
					set_variable = { 
						which = axu
						which = aeq
					}
					set_variable = { 
						which = axv
						which = aee
					}
					multiply_variable = { 
						which = axt
						value = 100
					}
					multiply_variable = { 
						which = axu
						value = 100
					}
					multiply_variable = { 
						which = axv
						value = 100
					}
					set_variable = { 
						which = ayp
						which = axb
					}
					change_variable = { 
						which = ayp
						which = axc
					}
					change_variable = { 
						which = ayp
						which = axd
					}
					set_variable = { 
						which = ayv
						which = ayp
					}
					if = { 
						limit = { 
							AND = { 
								check_variable = { 
									which = ayv
									value = 0.001
								}
							}
						}
						divide_variable = { 
							which = ayv
							which = aaz
						}
						multiply_variable = { 
							which = ayv
							value = 100
						}
					}
				}
				else_if = { 
					limit = { 
						AND = { 
							is_variable_equal = { 
								which = aef
								which = adv
							}
						}
					}
					if = { 
						limit = { 
							AND = { 
								check_variable = { 
									which = axe
									which = kdu
								}
							}
						}
						subtract_variable = { 
							which = axe
							which = kdu
						}
					}
					else = { 
						set_variable = { 
							which = kdu
							which = axe
						}
						set_variable = { 
							which = axe
							value = 0
						}
					}
					if = { 
						limit = { 
							AND = { 
								check_variable = { 
									which = axf
									which = kdv
								}
							}
						}
						subtract_variable = { 
							which = axf
							which = kdv
						}
					}
					else = { 
						set_variable = { 
							which = kdv
							which = axf
						}
						set_variable = { 
							which = axf
							value = 0
						}
					}
					if = { 
						limit = { 
							AND = { 
								check_variable = { 
									which = axg
									which = kdw
								}
							}
						}
						subtract_variable = { 
							which = axg
							which = kdw
						}
					}
					else = { 
						set_variable = { 
							which = kdw
							which = axg
						}
						set_variable = { 
							which = axg
							value = 0
						}
					}
					set_variable = { 
						which = aer
						which = axe
					}
					set_variable = { 
						which = aes
						which = axf
					}
					set_variable = { 
						which = aeg
						which = axg
					}
					if = { 
						limit = { 
							OR = { 
								AND = { 
									is_variable_equal = { 
										which = aaw
										value = 0
									}
								}
								NOT = { 
									AND = { 
										check_variable = { 
											which = aer
											value = 0.001
										}
									}
								}
							}
						}
						set_variable = { 
							which = aer
							value = 0
						}
					}
					else = { 
						divide_variable = { 
							which = aer
							which = aaw
						}
					}
					if = { 
						limit = { 
							OR = { 
								AND = { 
									is_variable_equal = { 
										which = aax
										value = 0
									}
								}
								NOT = { 
									AND = { 
										check_variable = { 
											which = aes
											value = 0.001
										}
									}
								}
							}
						}
						set_variable = { 
							which = aes
							value = 0
						}
					}
					else = { 
						divide_variable = { 
							which = aes
							which = aax
						}
					}
					if = { 
						limit = { 
							OR = { 
								AND = { 
									is_variable_equal = { 
										which = aay
										value = 0
									}
								}
								NOT = { 
									AND = { 
										check_variable = { 
											which = aeg
											value = 0.001
										}
									}
								}
							}
						}
						set_variable = { 
							which = aeg
							value = 0
						}
					}
					else = { 
						divide_variable = { 
							which = aeg
							which = aay
						}
					}
					set_variable = { 
						which = axw
						which = aer
					}
					set_variable = { 
						which = axx
						which = aes
					}
					set_variable = { 
						which = axy
						which = aeg
					}
					multiply_variable = { 
						which = axw
						value = 100
					}
					multiply_variable = { 
						which = axx
						value = 100
					}
					multiply_variable = { 
						which = axy
						value = 100
					}
					set_variable = { 
						which = ayq
						which = axe
					}
					change_variable = { 
						which = ayq
						which = axf
					}
					change_variable = { 
						which = ayq
						which = axg
					}
					set_variable = { 
						which = ayw
						which = ayq
					}
					if = { 
						limit = { 
							AND = { 
								check_variable = { 
									which = ayw
									value = 0.001
								}
							}
						}
						divide_variable = { 
							which = ayw
							which = aaz
						}
						multiply_variable = { 
							which = ayw
							value = 100
						}
					}
				}
				if = { 
					limit = { 
						AND = { 
							is_variable_equal = { 
								which = adv
								value = 9
							}
						}
					}
					change_variable = { 
						which = awp
						which = kdu
					}
					change_variable = { 
						which = awq
						which = kdv
					}
					change_variable = { 
						which = awr
						which = kdw
					}
					set_variable = { 
						which = aeh
						which = awp
					}
					set_variable = { 
						which = aei
						which = awq
					}
					set_variable = { 
						which = adw
						which = awr
					}
					if = { 
						limit = { 
							OR = { 
								AND = { 
									is_variable_equal = { 
										which = aaw
										value = 0
									}
								}
								AND = { 
									is_variable_equal = { 
										which = aeh
										value = 0.001
									}
								}
							}
						}
						set_variable = { 
							which = aeh
							value = 0
						}
					}
					else = { 
						divide_variable = { 
							which = aeh
							which = aaw
						}
					}
					if = { 
						limit = { 
							OR = { 
								AND = { 
									is_variable_equal = { 
										which = aax
										value = 0
									}
								}
								AND = { 
									is_variable_equal = { 
										which = aei
										value = 0.001
									}
								}
							}
						}
						set_variable = { 
							which = aei
							value = 0
						}
					}
					else = { 
						divide_variable = { 
							which = aei
							which = aax
						}
					}
					if = { 
						limit = { 
							OR = { 
								AND = { 
									is_variable_equal = { 
										which = aay
										value = 0
									}
								}
								AND = { 
									is_variable_equal = { 
										which = adw
										value = 0.001
									}
								}
							}
						}
						set_variable = { 
							which = adw
							value = 0
						}
					}
					else = { 
						divide_variable = { 
							which = adw
							which = aay
						}
					}
					set_variable = { 
						which = axh
						which = aeh
					}
					set_variable = { 
						which = axi
						which = aei
					}
					set_variable = { 
						which = axj
						which = adw
					}
					multiply_variable = { 
						which = axh
						value = 100
					}
					multiply_variable = { 
						which = axi
						value = 100
					}
					multiply_variable = { 
						which = axj
						value = 100
					}
					set_variable = { 
						which = ayl
						which = awp
					}
					change_variable = { 
						which = ayl
						which = awq
					}
					change_variable = { 
						which = ayl
						which = awr
					}
					set_variable = { 
						which = ayr
						which = ayl
					}
					if = { 
						limit = { 
							AND = { 
								check_variable = { 
									which = ayr
									value = 0.001
								}
							}
						}
						divide_variable = { 
							which = ayr
							which = aaz
						}
						multiply_variable = { 
							which = ayr
							value = 100
						}
					}
				}
				else_if = { 
					limit = { 
						AND = { 
							is_variable_equal = { 
								which = adx
								value = 9
							}
						}
					}
					change_variable = { 
						which = aws
						which = kdu
					}
					change_variable = { 
						which = awt
						which = kdv
					}
					change_variable = { 
						which = awu
						which = kdw
					}
					set_variable = { 
						which = aej
						which = aws
					}
					set_variable = { 
						which = aek
						which = awt
					}
					set_variable = { 
						which = ady
						which = awu
					}
					if = { 
						limit = { 
							OR = { 
								AND = { 
									is_variable_equal = { 
										which = aaw
										value = 0
									}
								}
								AND = { 
									is_variable_equal = { 
										which = aej
										value = 0.001
									}
								}
							}
						}
						set_variable = { 
							which = aej
							value = 0
						}
					}
					else = { 
						divide_variable = { 
							which = aej
							which = aaw
						}
					}
					if = { 
						limit = { 
							OR = { 
								AND = { 
									is_variable_equal = { 
										which = aax
										value = 0
									}
								}
								AND = { 
									is_variable_equal = { 
										which = aek
										value = 0.001
									}
								}
							}
						}
						set_variable = { 
							which = aek
							value = 0
						}
					}
					else = { 
						divide_variable = { 
							which = aek
							which = aax
						}
					}
					if = { 
						limit = { 
							OR = { 
								AND = { 
									is_variable_equal = { 
										which = aay
										value = 0
									}
								}
								AND = { 
									is_variable_equal = { 
										which = ady
										value = 0.001
									}
								}
							}
						}
						set_variable = { 
							which = ady
							value = 0
						}
					}
					else = { 
						divide_variable = { 
							which = ady
							which = aay
						}
					}
					set_variable = { 
						which = axk
						which = aej
					}
					set_variable = { 
						which = axl
						which = aek
					}
					set_variable = { 
						which = axm
						which = ady
					}
					multiply_variable = { 
						which = axk
						value = 100
					}
					multiply_variable = { 
						which = axl
						value = 100
					}
					multiply_variable = { 
						which = axm
						value = 100
					}
					set_variable = { 
						which = aym
						which = aws
					}
					change_variable = { 
						which = aym
						which = awt
					}
					change_variable = { 
						which = aym
						which = awu
					}
					set_variable = { 
						which = ays
						which = aym
					}
					if = { 
						limit = { 
							AND = { 
								check_variable = { 
									which = ays
									value = 0.001
								}
							}
						}
						divide_variable = { 
							which = ays
							which = aaz
						}
						multiply_variable = { 
							which = ays
							value = 100
						}
					}
				}
				else_if = { 
					limit = { 
						AND = { 
							is_variable_equal = { 
								which = adz
								value = 9
							}
						}
					}
					change_variable = { 
						which = awv
						which = kdu
					}
					change_variable = { 
						which = aww
						which = kdv
					}
					change_variable = { 
						which = awx
						which = kdw
					}
					set_variable = { 
						which = ael
						which = awv
					}
					set_variable = { 
						which = aem
						which = aww
					}
					set_variable = { 
						which = aea
						which = awx
					}
					if = { 
						limit = { 
							OR = { 
								AND = { 
									is_variable_equal = { 
										which = aaw
										value = 0
									}
								}
								AND = { 
									is_variable_equal = { 
										which = ael
										value = 0.001
									}
								}
							}
						}
						set_variable = { 
							which = ael
							value = 0
						}
					}
					else = { 
						divide_variable = { 
							which = ael
							which = aaw
						}
					}
					if = { 
						limit = { 
							OR = { 
								AND = { 
									is_variable_equal = { 
										which = aax
										value = 0
									}
								}
								AND = { 
									is_variable_equal = { 
										which = aem
										value = 0.001
									}
								}
							}
						}
						set_variable = { 
							which = aem
							value = 0
						}
					}
					else = { 
						divide_variable = { 
							which = aem
							which = aax
						}
					}
					if = { 
						limit = { 
							OR = { 
								AND = { 
									is_variable_equal = { 
										which = aay
										value = 0
									}
								}
								AND = { 
									is_variable_equal = { 
										which = aea
										value = 0.001
									}
								}
							}
						}
						set_variable = { 
							which = aea
							value = 0
						}
					}
					else = { 
						divide_variable = { 
							which = aea
							which = aay
						}
					}
					set_variable = { 
						which = axn
						which = ael
					}
					set_variable = { 
						which = axo
						which = aem
					}
					set_variable = { 
						which = axp
						which = aea
					}
					multiply_variable = { 
						which = axn
						value = 100
					}
					multiply_variable = { 
						which = axo
						value = 100
					}
					multiply_variable = { 
						which = axp
						value = 100
					}
					set_variable = { 
						which = ayn
						which = awv
					}
					change_variable = { 
						which = ayn
						which = aww
					}
					change_variable = { 
						which = ayn
						which = awx
					}
					set_variable = { 
						which = ayt
						which = ayn
					}
					if = { 
						limit = { 
							AND = { 
								check_variable = { 
									which = ayt
									value = 0.001
								}
							}
						}
						divide_variable = { 
							which = ayt
							which = aaz
						}
						multiply_variable = { 
							which = ayt
							value = 100
						}
					}
				}
				else_if = { 
					limit = { 
						AND = { 
							is_variable_equal = { 
								which = aeb
								value = 9
							}
						}
					}
					change_variable = { 
						which = awy
						which = kdu
					}
					change_variable = { 
						which = awz
						which = kdv
					}
					change_variable = { 
						which = axa
						which = kdw
					}
					set_variable = { 
						which = aen
						which = awy
					}
					set_variable = { 
						which = aeo
						which = awz
					}
					set_variable = { 
						which = aec
						which = axa
					}
					if = { 
						limit = { 
							OR = { 
								AND = { 
									is_variable_equal = { 
										which = aaw
										value = 0
									}
								}
								AND = { 
									is_variable_equal = { 
										which = aen
										value = 0.001
									}
								}
							}
						}
						set_variable = { 
							which = aen
							value = 0
						}
					}
					else = { 
						divide_variable = { 
							which = aen
							which = aaw
						}
					}
					if = { 
						limit = { 
							OR = { 
								AND = { 
									is_variable_equal = { 
										which = aax
										value = 0
									}
								}
								AND = { 
									is_variable_equal = { 
										which = aeo
										value = 0.001
									}
								}
							}
						}
						set_variable = { 
							which = aeo
							value = 0
						}
					}
					else = { 
						divide_variable = { 
							which = aeo
							which = aax
						}
					}
					if = { 
						limit = { 
							OR = { 
								AND = { 
									is_variable_equal = { 
										which = aay
										value = 0
									}
								}
								AND = { 
									is_variable_equal = { 
										which = aec
										value = 0.001
									}
								}
							}
						}
						set_variable = { 
							which = aec
							value = 0
						}
					}
					else = { 
						divide_variable = { 
							which = aec
							which = aay
						}
					}
					set_variable = { 
						which = axq
						which = aen
					}
					set_variable = { 
						which = axr
						which = aeo
					}
					set_variable = { 
						which = axs
						which = aec
					}
					multiply_variable = { 
						which = axq
						value = 100
					}
					multiply_variable = { 
						which = axr
						value = 100
					}
					multiply_variable = { 
						which = axs
						value = 100
					}
					set_variable = { 
						which = ayo
						which = awy
					}
					change_variable = { 
						which = ayo
						which = awz
					}
					change_variable = { 
						which = ayo
						which = axa
					}
					set_variable = { 
						which = ayu
						which = ayo
					}
					if = { 
						limit = { 
							AND = { 
								check_variable = { 
									which = ayu
									value = 0.001
								}
							}
						}
						divide_variable = { 
							which = ayu
							which = aaz
						}
						multiply_variable = { 
							which = ayu
							value = 100
						}
					}
				}
				else_if = { 
					limit = { 
						AND = { 
							is_variable_equal = { 
								which = aed
								value = 9
							}
						}
					}
					change_variable = { 
						which = axb
						which = kdu
					}
					change_variable = { 
						which = axc
						which = kdv
					}
					change_variable = { 
						which = axd
						which = kdw
					}
					set_variable = { 
						which = aep
						which = axb
					}
					set_variable = { 
						which = aeq
						which = axc
					}
					set_variable = { 
						which = aee
						which = axd
					}
					if = { 
						limit = { 
							OR = { 
								AND = { 
									is_variable_equal = { 
										which = aaw
										value = 0
									}
								}
								AND = { 
									is_variable_equal = { 
										which = aep
										value = 0.001
									}
								}
							}
						}
						set_variable = { 
							which = aep
							value = 0
						}
					}
					else = { 
						divide_variable = { 
							which = aep
							which = aaw
						}
					}
					if = { 
						limit = { 
							OR = { 
								AND = { 
									is_variable_equal = { 
										which = aax
										value = 0
									}
								}
								AND = { 
									is_variable_equal = { 
										which = aeq
										value = 0.001
									}
								}
							}
						}
						set_variable = { 
							which = aeq
							value = 0
						}
					}
					else = { 
						divide_variable = { 
							which = aeq
							which = aax
						}
					}
					if = { 
						limit = { 
							OR = { 
								AND = { 
									is_variable_equal = { 
										which = aay
										value = 0
									}
								}
								AND = { 
									is_variable_equal = { 
										which = aee
										value = 0.001
									}
								}
							}
						}
						set_variable = { 
							which = aee
							value = 0
						}
					}
					else = { 
						divide_variable = { 
							which = aee
							which = aay
						}
					}
					set_variable = { 
						which = axt
						which = aep
					}
					set_variable = { 
						which = axu
						which = aeq
					}
					set_variable = { 
						which = axv
						which = aee
					}
					multiply_variable = { 
						which = axt
						value = 100
					}
					multiply_variable = { 
						which = axu
						value = 100
					}
					multiply_variable = { 
						which = axv
						value = 100
					}
					set_variable = { 
						which = ayp
						which = axb
					}
					change_variable = { 
						which = ayp
						which = axc
					}
					change_variable = { 
						which = ayp
						which = axd
					}
					set_variable = { 
						which = ayv
						which = ayp
					}
					if = { 
						limit = { 
							AND = { 
								check_variable = { 
									which = ayv
									value = 0.001
								}
							}
						}
						divide_variable = { 
							which = ayv
							which = aaz
						}
						multiply_variable = { 
							which = ayv
							value = 100
						}
					}
				}
				else_if = { 
					limit = { 
						AND = { 
							is_variable_equal = { 
								which = aef
								value = 9
							}
						}
					}
					change_variable = { 
						which = axe
						which = kdu
					}
					change_variable = { 
						which = axf
						which = kdv
					}
					change_variable = { 
						which = axg
						which = kdw
					}
					set_variable = { 
						which = aer
						which = axe
					}
					set_variable = { 
						which = aes
						which = axf
					}
					set_variable = { 
						which = aeg
						which = axg
					}
					if = { 
						limit = { 
							OR = { 
								AND = { 
									is_variable_equal = { 
										which = aaw
										value = 0
									}
								}
								AND = { 
									is_variable_equal = { 
										which = aer
										value = 0.001
									}
								}
							}
						}
						set_variable = { 
							which = aer
							value = 0
						}
					}
					else = { 
						divide_variable = { 
							which = aer
							which = aaw
						}
					}
					if = { 
						limit = { 
							OR = { 
								AND = { 
									is_variable_equal = { 
										which = aax
										value = 0
									}
								}
								AND = { 
									is_variable_equal = { 
										which = aes
										value = 0.001
									}
								}
							}
						}
						set_variable = { 
							which = aes
							value = 0
						}
					}
					else = { 
						divide_variable = { 
							which = aes
							which = aax
						}
					}
					if = { 
						limit = { 
							OR = { 
								AND = { 
									is_variable_equal = { 
										which = aay
										value = 0
									}
								}
								AND = { 
									is_variable_equal = { 
										which = aeg
										value = 0.001
									}
								}
							}
						}
						set_variable = { 
							which = aeg
							value = 0
						}
					}
					else = { 
						divide_variable = { 
							which = aeg
							which = aay
						}
					}
					set_variable = { 
						which = axw
						which = aer
					}
					set_variable = { 
						which = axx
						which = aes
					}
					set_variable = { 
						which = axy
						which = aeg
					}
					multiply_variable = { 
						which = axw
						value = 100
					}
					multiply_variable = { 
						which = axx
						value = 100
					}
					multiply_variable = { 
						which = axy
						value = 100
					}
					set_variable = { 
						which = ayq
						which = axe
					}
					change_variable = { 
						which = ayq
						which = axf
					}
					change_variable = { 
						which = ayq
						which = axg
					}
					set_variable = { 
						which = ayw
						which = ayq
					}
					if = { 
						limit = { 
							AND = { 
								check_variable = { 
									which = ayw
									value = 0.001
								}
							}
						}
						divide_variable = { 
							which = ayw
							which = aaz
						}
						multiply_variable = { 
							which = ayw
							value = 100
						}
					}
				}
				set_province_flag = DG_Update
				set_variable = { 
					which = kdu
					value = 0
				}
				set_variable = { 
					which = kdv
					value = 0
				}
				set_variable = { 
					which = kdw
					value = 0
				}
			}
		}
	}
}
province_event = { 
	id = DG_Orthodox.201
	title = "AI_Event"
	desc = "AI_Event"
	picture = all_church_state
	is_triggered_only = yes
	hidden = yes
	trigger = { 
		religion = orthodox
	}
	immediate = { }
	option = { 
		name = "AI_Event"
	}
}
country_event = { 
	id = DG_Orthodox.802
	title = DG_Orthodox.042.title
	desc = DG_Orthodox.042.desc
	picture = orthodox_patriarch_visit
	goto = patriarch_visit
	trigger = { 
		check_variable = { 
			which = jesuit_support
			value = 1
		}
		religion = catholic
		num_of_owned_provinces_with = { 
			value = 10
			religion = orthodox
		}
		orthodox = 0
		AND = { 
			OR = { 
				is_subject = no
				is_subject_of_type = tributary_state
				is_subject_of_type = close_tributary_state
			}
		}
		any_owned_province = { 
			religion = orthodox
			AND = { 
				check_variable = { 
					which = aax
					value = 10
				}
			}
		}
		NOT = { 
			has_country_flag = uniate_church_proposed
		}
		NOT = { 
			has_country_flag = uniate_church
		}
		NOT = { 
			has_country_flag = uniate_church_rejected
		}
		NOT = { 
			has_disaster = chmielnicki_uprising
		}
	}
	mean_time_to_happen = { 
		years = 25
		modifier = { 
			factor = 0.7
			check_variable = { 
				which = jesuit_support
				value = 2
			}
		}
		modifier = { 
			factor = 0.7
			check_variable = { 
				which = jesuit_support
				value = 3
			}
		}
	}
	immediate = { 
		hidden_effect = { 
			random_owned_province = { 
				limit = { 
					religion = orthodox
					AND = { 
						check_variable = { 
							which = aax
							value = 10
						}
					}
				}
				save_event_target_as = patriarch_visit
			}
		}
	}
	option = { 
		name = DG_Orthodox.042.opta
		ai_chance = { 
			factor = 75
		}
		if = { 
			limit = { 
				advisor = theologian_CL
			}
			add_adm_power = -50
		}
		else = { 
			add_adm_power = -100
		}
		every_owned_province = { 
			limit = { 
				religion = orthodox
				AND = { 
					check_variable = { 
						which = aax
						value = 10
					}
				}
			}
			add_unrest = 10
		}
		set_country_flag = uniate_church_proposed
	}
	option = { 
		name = DG_Orthodox.042.optb
		ai_chance = { 
			factor = 25
			modifier = { 
				AND = { 
					check_variable = { 
						which = asx
						value = 80
					}
				}
				factor = 1.4
			}
			modifier = { 
				AND = { 
					check_variable = { 
						which = asx
						value = 60
					}
				}
				factor = 1.4
			}
			modifier = { 
				NOT = { 
					AND = { 
						check_variable = { 
							which = asx
							value = 40
						}
					}
				}
				factor = 0.7
			}
			modifier = { 
				NOT = { 
					AND = { 
						check_variable = { 
							which = asx
							value = 20
						}
					}
				}
				factor = 0.7
			}
		}
		if = { 
			limit = { 
				AND = { 
					check_variable = { 
						which = asx
						value = 80
					}
				}
			}
			add_country_modifier = { 
				name = religious_intolerance
				duration = 2000
			}
		}
		else_if = { 
			limit = { 
				AND = { 
					check_variable = { 
						which = asx
						value = 60
					}
				}
			}
			add_country_modifier = { 
				name = religious_intolerance
				duration = 1600
			}
		}
		else_if = { 
			limit = { 
				AND = { 
					check_variable = { 
						which = asx
						value = 40
					}
				}
			}
			add_country_modifier = { 
				name = religious_intolerance
				duration = 1200
			}
		}
		else_if = { 
			limit = { 
				AND = { 
					check_variable = { 
						which = asx
						value = 20
					}
				}
			}
			add_country_modifier = { 
				name = religious_intolerance
				duration = 800
			}
		}
		else = { 
			add_country_modifier = { 
				name = religious_intolerance
				duration = 400
			}
		}
		hidden_effect = { 
			every_owned_province = { 
				limit = { 
					AND = { 
						check_variable = { 
							which = asx
							value = 0.001
						}
					}
				}
				change_variable = { 
					which = ata
					value = 5
				}
				change_variable = { 
					which = atb
					value = 5
				}
				if = { 
					limit = { 
						AND = { 
							check_variable = { 
								which = ata
								value = 100.001
							}
						}
					}
					set_variable = { 
						which = ata
						value = 100
					}
				}
				else_if = { 
					limit = { 
						NOT = { 
							AND = { 
								check_variable = { 
									which = ata
									value = 0
								}
							}
						}
					}
					set_variable = { 
						which = ata
						value = 0
					}
				}
				set_province_flag = Unrest_Update
			}
		}
		custom_tooltip = POP_CLLoyProv_5
		set_country_flag = uniate_church_rejected
	}
}
country_event = { 
	id = DG_Orthodox.803
	title = DG_Orthodox.043.title
	desc = DG_Orthodox.043.desc
	picture = orthodox_controversial_patriarch
	trigger = { 
		has_country_flag = uniate_church_proposed
		religion = catholic
		NOT = { 
			has_country_flag = uniate_church_rejected
		}
		NOT = { 
			has_disaster = chmielnicki_uprising
		}
	}
	mean_time_to_happen = { 
		years = 8
		modifier = { 
			ADM = 5
			factor = 0.7
		}
		modifier = { 
			NOT = { 
				ADM = 3
			}
			factor = 1.4
		}
		modifier = { 
			advisor = theologian_CL
			factor = 0.7
		}
	}
	option = { 
		name = DG_Orthodox.043.opta
		ai_chance = { 
			factor = 70
			modifier = { 
				orthodox = 3
				factor = 0
			}
			modifier = { 
				religious_unity = 1.00
				factor = 0.7
			}
			modifier = { 
				NOT = { 
					religious_unity = 0.80
				}
				factor = 1.4
			}
			modifier = { 
				NOT = { 
					religious_unity = 0.60
				}
				factor = 1.4
			}
			modifier = { 
				num_of_owned_provinces_with = { 
					value = 15
					religion = orthodox
				}
				factor = 1.4
			}
			modifier = { 
				num_of_owned_provinces_with = { 
					value = 20
					religion = orthodox
				}
				factor = 1.4
			}
			modifier = { 
				num_of_owned_provinces_with = { 
					value = 25
					religion = orthodox
				}
				factor = 1.4
			}
			modifier = { 
				num_of_owned_provinces_with = { 
					value = 30
					religion = orthodox
				}
				factor = 1.4
			}
		}
		add_country_modifier = { 
			name = uniate_church
			duration = -1
		}
		if = { 
			limit = { 
				AND = { 
					check_variable = { 
						which = asx
						value = 80
					}
				}
			}
			add_country_modifier = { 
				name = religious_controversy
				duration = 4000
			}
		}
		else_if = { 
			limit = { 
				AND = { 
					check_variable = { 
						which = asx
						value = 60
					}
				}
			}
			add_country_modifier = { 
				name = religious_controversy
				duration = 2000
			}
		}
		else_if = { 
			limit = { 
				AND = { 
					check_variable = { 
						which = asx
						value = 40
					}
				}
			}
			add_country_modifier = { 
				name = religious_controversy
				duration = 1000
			}
		}
		else = { 
			add_country_modifier = { 
				name = religious_controversy
				duration = 500
			}
		}
		clr_country_flag = uniate_church_proposed
		set_country_flag = uniate_church
		custom_tooltip = uniate_church_explained
	}
	option = { 
		name = DG_Orthodox.043.optb
		ai_chance = { 
			factor = 30
		}
		set_country_flag = uniate_church_rejected
	}
}
country_event = { 
	id = DG_Orthodox.804
	title = DG_Orthodox.044.title
	desc = DG_Orthodox.044.desc
	picture = orthodox_uprising
	trigger = { 
		has_country_modifier = uniate_church
		NOT = { 
			check_variable = { 
				which = uniate_resistance
				value = 3
			}
		}
	}
	mean_time_to_happen = { 
		years = 8
		modifier = { 
			religious_unity = 1.00
			factor = 1.4
		}
		modifier = { 
			check_variable = { 
				which = uniate_resistance
				value = 1
			}
			factor = 1.4
		}
		modifier = { 
			check_variable = { 
				which = uniate_resistance
				value = 2
			}
			factor = 1.4
		}
	}
	option = { 
		name = DG_Orthodox.044.opta
		ai_chance = { 
			factor = 50
		}
		custom_tooltip = uniate_riots_explained
		add_papal_influence = 5
		hidden_effect = { 
			every_owned_province = { 
				limit = { 
					AND = { 
						check_variable = { 
							which = asx
							value = 0.001
						}
					}
				}
				change_variable = { 
					which = ata
					value = 5
				}
				change_variable = { 
					which = atb
					value = 5
				}
				if = { 
					limit = { 
						AND = { 
							check_variable = { 
								which = ata
								value = 100.001
							}
						}
					}
					set_variable = { 
						which = ata
						value = 100
					}
				}
				else_if = { 
					limit = { 
						NOT = { 
							AND = { 
								check_variable = { 
									which = ata
									value = 0
								}
							}
						}
					}
					set_variable = { 
						which = ata
						value = 0
					}
				}
				set_province_flag = Unrest_Update
			}
		}
		custom_tooltip = POP_CLLoyProv_5
		hidden_effect = { 
			every_owned_province = { 
				limit = { 
					religion = orthodox
				}
				random = { 
					chance = 33
					add_province_modifier = { 
						name = religious_riots
						duration = 730
					}
				}
			}
			change_variable = { 
				which = uniate_resistance
				value = 1
			}
		}
	}
	option = { 
		name = DG_Orthodox.044.optb
		ai_chance = { 
			factor = 40
		}
		custom_tooltip = uniate_church_concessions_explained
		remove_country_modifier = uniate_church
		add_country_modifier = { 
			name = uniate_church_with_concessions
			duration = -1
		}
		add_papal_influence = -20
		hidden_effect = { 
			every_owned_province = { 
				limit = { 
					AND = { 
						check_variable = { 
							which = asx
							value = 0.001
						}
					}
				}
				change_variable = { 
					which = ata
					value = -20
				}
				change_variable = { 
					which = atb
					value = -20
				}
				if = { 
					limit = { 
						AND = { 
							check_variable = { 
								which = ata
								value = 100.001
							}
						}
					}
					set_variable = { 
						which = ata
						value = 100
					}
				}
				else_if = { 
					limit = { 
						NOT = { 
							AND = { 
								check_variable = { 
									which = ata
									value = 0
								}
							}
						}
					}
					set_variable = { 
						which = ata
						value = 0
					}
				}
				set_province_flag = Unrest_Update
			}
		}
		custom_tooltip = POP_CLLoyProv_-20
		hidden_effect = { 
			set_variable = { 
				which = uniate_resistance
				value = 0
			}
		}
		set_country_flag = uniate_church_concessions
	}
	option = { 
		name = DG_Orthodox.044.optc
		ai_chance = { 
			factor = 10
		}
		remove_country_modifier = uniate_church
		add_papal_influence = -10
		hidden_effect = { 
			every_owned_province = { 
				limit = { 
					AND = { 
						check_variable = { 
							which = asx
							value = 0.001
						}
					}
				}
				change_variable = { 
					which = ata
					value = -10
				}
				change_variable = { 
					which = atb
					value = -10
				}
				if = { 
					limit = { 
						AND = { 
							check_variable = { 
								which = ata
								value = 100.001
							}
						}
					}
					set_variable = { 
						which = ata
						value = 100
					}
				}
				else_if = { 
					limit = { 
						NOT = { 
							AND = { 
								check_variable = { 
									which = ata
									value = 0
								}
							}
						}
					}
					set_variable = { 
						which = ata
						value = 0
					}
				}
				set_province_flag = Unrest_Update
			}
		}
		custom_tooltip = POP_CLLoyProv_-10
		hidden_effect = { 
			set_variable = { 
				which = uniate_resistance
				value = 0
			}
		}
		clr_country_flag = uniate_church
	}
}
province_event = { 
	id = DG_Orthodox.901
	title = "DG_Orthodox.901.title"
	desc = "DG_Orthodox.901.desc"
	picture = orthodox_icon
	is_triggered_only = yes
	option = { 
		name = "DG_Orthodox.901.opta"
		ai_chance = { 
			factor = 90
		}
		add_permanent_province_modifier = { 
			name = religious_icon
			duration = -1
			hidden = yes
		}
	}
	option = { 
		name = "DG_Orthodox.901.optb"
		ai_chance = { 
			factor = 10
		}
		owner = { 
			add_prestige = 1
		}
	}
}

namespace = prisonner_of_war
country_event = { 
	id = prisonner_of_war.100
	title = "prisonner_of_war.100.name"
	desc = "prisonner_of_war.100.desc"
	picture = CONQUEST_eventPicture
	trigger = { 
		is_year = 1359
		has_country_flag = ruler_prisonner_of_war
		has_regency = yes
		OR = { 
			had_country_flag = { 
				flag = ruler_prisonner_of_war
				days = 1825
			}
			ruler_age = 45
		}
		is_at_war = yes
	}
	mean_time_to_happen = { 
		years = 10
		modifier = { 
			ruler_age = 50
			factor = 1.1
		}
		modifier = { 
			ruler_age = 55
			factor = 1.2
		}
		modifier = { 
			ruler_age = 60
			factor = 1.3
		}
		modifier = { 
			ruler_age = 65
			factor = 1.5
		}
		modifier = { 
			ruler_age = 75
			factor = 2.0
		}
	}
	option = { 
		name = "prisonner_of_war.100.opta"
		set_heir = heir_pow
		clr_country_flag = ruler_prisonner_of_war
		add_war_exhaustion = 10
		set_variable = { 
			which = the_heir_age
			value = 0
		}
		log = "FE-RulerPOW:[GetYear]:[Root.GetName]:Ruler ([Root.Monarch.GetName]) died in prison:prisonner_of_war.100"
	}
}
country_event = { 
	id = prisonner_of_war.101
	title = "prisonner_of_war.101.name"
	desc = "prisonner_of_war.101.desc"
	picture = CONQUEST_eventPicture
	is_triggered_only = yes
	hidden = yes
	trigger = { 
		has_country_flag = ruler_prisonner_of_war
		OR = { 
			is_at_war = no
			AND = { 
				has_country_flag = jean_prisonner_of_war
				NOT = { 
					war_with = ENG
				}
			}
		}
	}
	option = { 
		name = "prisonner_of_war.101.opta"
		if = { 
			limit = { 
				has_regency = yes
				has_consort_regency = no
			}
			country_event = { 
				id = prisonner_of_war.102
				days = 0
			}
		}
		else = { 
			country_event = { 
				id = prisonner_of_war.103
				days = 0
			}
		}
		set_variable = { 
			which = the_heir_age
			value = 0
		}
	}
}
country_event = { 
	id = prisonner_of_war.102
	title = "prisonner_of_war.102.name"
	desc = "prisonner_of_war.102.desc"
	picture = CONQUEST_eventPicture
	is_triggered_only = yes
	option = { 
		name = "prisonner_of_war.102.opta"
		set_country_flag = Ruler_ExileRestore
		set_ruler = ruler_pow
		set_heir = heir_pow
		clr_country_flag = ruler_prisonner_of_war
		hidden_effect = { 
			set_variable = { 
				which = hut
				value = 0
			}
			set_variable = { 
				which = hut
				value = 0
			}
			change_variable = { 
				which = hut
				which = iao
			}
			set_variable = { 
				which = arf
				value = 150
			}
			subtract_variable = { 
				which = arf
				which = hum
			}
			divide_variable = { 
				which = arf
				value = 1.5
			}
			if = { 
				limit = { 
					AND = { 
						check_variable = { 
							which = hut
							which = arf
						}
					}
				}
				set_variable = { 
					which = hut
					which = arf
				}
			}
			if = { 
				limit = { 
					has_global_flag = POP_Sim
				}
				set_variable = { 
					which = hul
					which = hut
				}
			}
			else = { 
				set_variable = { 
					which = huv
					which = hut
				}
				subtract_variable = { 
					which = huv
					which = hul
				}
				multiply_variable = { 
					which = huv
					value = 0.1
				}
				change_variable = { 
					which = hul
					which = huv
				}
				if = { 
					limit = { 
						AND = { 
							check_variable = { 
								which = hul
								value = 100
							}
						}
					}
					set_variable = { 
						which = hul
						value = 100
					}
				}
				if = { 
					limit = { 
						NOT = { 
							AND = { 
								check_variable = { 
									which = hul
									value = 0
								}
							}
						}
					}
					set_variable = { 
						which = hul
						value = 0
					}
				}
			}
			set_variable = { 
				which = huu
				value = 0
			}
			set_variable = { 
				which = huu
				value = 0
			}
			change_variable = { 
				which = huu
				which = iap
			}
			set_variable = { 
				which = arf
				value = 150
			}
			subtract_variable = { 
				which = arf
				which = hul
			}
			divide_variable = { 
				which = arf
				value = 1.5
			}
			if = { 
				limit = { 
					AND = { 
						check_variable = { 
							which = huu
							which = arf
						}
					}
				}
				set_variable = { 
					which = huu
					which = arf
				}
			}
			if = { 
				limit = { 
					has_global_flag = POP_Sim
				}
				set_variable = { 
					which = hum
					which = huu
				}
			}
			else = { 
				set_variable = { 
					which = huw
					which = huu
				}
				subtract_variable = { 
					which = huw
					which = hum
				}
				multiply_variable = { 
					which = huw
					value = 0.1
				}
				change_variable = { 
					which = hum
					which = huw
				}
				if = { 
					limit = { 
						AND = { 
							check_variable = { 
								which = hum
								value = 100
							}
						}
					}
					set_variable = { 
						which = hum
						value = 100
					}
				}
				if = { 
					limit = { 
						NOT = { 
							AND = { 
								check_variable = { 
									which = hum
									value = 0
								}
							}
						}
					}
					set_variable = { 
						which = hum
						value = 0
					}
				}
			}
			set_variable = { 
				which = hui
				value = 0
			}
			trigger_switch = { 
				on_trigger = adm
				6 = { 
					set_variable = { 
						which = hui
						value = 6
					}
				}
				5 = { 
					set_variable = { 
						which = hui
						value = 5
					}
				}
				4 = { 
					set_variable = { 
						which = hui
						value = 4
					}
				}
				3 = { 
					set_variable = { 
						which = hui
						value = 3
					}
				}
				2 = { 
					set_variable = { 
						which = hui
						value = 2
					}
				}
				1 = { 
					set_variable = { 
						which = hui
						value = 1
					}
				}
			}
			set_variable = { 
				which = huj
				value = 0
			}
			trigger_switch = { 
				on_trigger = dip
				6 = { 
					set_variable = { 
						which = huj
						value = 6
					}
				}
				5 = { 
					set_variable = { 
						which = huj
						value = 5
					}
				}
				4 = { 
					set_variable = { 
						which = huj
						value = 4
					}
				}
				3 = { 
					set_variable = { 
						which = huj
						value = 3
					}
				}
				2 = { 
					set_variable = { 
						which = huj
						value = 2
					}
				}
				1 = { 
					set_variable = { 
						which = huj
						value = 1
					}
				}
			}
			set_variable = { 
				which = huk
				value = 0
			}
			trigger_switch = { 
				on_trigger = mil
				6 = { 
					set_variable = { 
						which = huk
						value = 6
					}
				}
				5 = { 
					set_variable = { 
						which = huk
						value = 5
					}
				}
				4 = { 
					set_variable = { 
						which = huk
						value = 4
					}
				}
				3 = { 
					set_variable = { 
						which = huk
						value = 3
					}
				}
				2 = { 
					set_variable = { 
						which = huk
						value = 2
					}
				}
				1 = { 
					set_variable = { 
						which = huk
						value = 1
					}
				}
			}
			set_variable = { 
				which = huo
				value = 0
			}
			change_variable = { 
				which = huo
				which = hui
			}
			change_variable = { 
				which = huo
				which = huj
			}
			change_variable = { 
				which = huo
				which = huk
			}
			set_variable = { 
				which = bcn
				value = 0
			}
			set_variable = { 
				which = hux
				which = hul
			}
			if = { 
				limit = { 
					AND = { 
						check_variable = { 
							which = hux
							value = 100
						}
					}
				}
				set_variable = { 
					which = hux
					value = 100
				}
			}
			set_variable = { 
				which = hup
				which = hui
			}
			set_variable = { 
				which = huq
				which = huj
			}
			set_variable = { 
				which = hur
				which = huk
			}
			multiply_variable = { 
				which = hup
				which = hux
			}
			multiply_variable = { 
				which = huq
				which = hux
			}
			multiply_variable = { 
				which = hur
				which = hux
			}
			multiply_variable = { 
				which = hup
				value = 0.01
			}
			multiply_variable = { 
				which = huq
				value = 0.01
			}
			multiply_variable = { 
				which = hur
				value = 0.01
			}
			set_variable = { 
				which = arg
				value = 4
			}
			multiply_variable = { 
				which = arg
				which = hum
			}
			multiply_variable = { 
				which = arg
				value = 0.01
			}
			change_variable = { 
				which = hup
				which = arg
			}
			change_variable = { 
				which = huq
				which = arg
			}
			change_variable = { 
				which = hur
				which = arg
			}
			set_variable = { 
				which = amn
				which = hup
			}
			multiply_variable = { 
				which = amn
				value = 0.001
			}
			multiply_variable = { 
				which = amn
				value = 1000
			}
			set_variable = { 
				which = amo
				which = hup
			}
			subtract_variable = { 
				which = amo
				which = amn
			}
			set_variable = { 
				which = hup
				which = amn
			}
			if = { 
				limit = { 
					AND = { 
						check_variable = { 
							which = amo
							value = 0.5
						}
					}
				}
				change_variable = { 
					which = hup
					value = 1
				}
			}
			set_variable = { 
				which = amn
				which = huq
			}
			multiply_variable = { 
				which = amn
				value = 0.001
			}
			multiply_variable = { 
				which = amn
				value = 1000
			}
			set_variable = { 
				which = amo
				which = huq
			}
			subtract_variable = { 
				which = amo
				which = amn
			}
			set_variable = { 
				which = huq
				which = amn
			}
			if = { 
				limit = { 
					AND = { 
						check_variable = { 
							which = amo
							value = 0.5
						}
					}
				}
				change_variable = { 
					which = huq
					value = 1
				}
			}
			set_variable = { 
				which = amn
				which = hur
			}
			multiply_variable = { 
				which = amn
				value = 0.001
			}
			multiply_variable = { 
				which = amn
				value = 1000
			}
			set_variable = { 
				which = amo
				which = hur
			}
			subtract_variable = { 
				which = amo
				which = amn
			}
			set_variable = { 
				which = hur
				which = amn
			}
			if = { 
				limit = { 
					AND = { 
						check_variable = { 
							which = amo
							value = 0.5
						}
					}
				}
				change_variable = { 
					which = hur
					value = 1
				}
			}
			set_variable = { 
				which = bcn
				which = hup
			}
			change_variable = { 
				which = bcn
				which = huq
			}
			change_variable = { 
				which = bcn
				which = hur
			}
			set_variable = { 
				which = hus
				which = bcn
			}
			divide_variable = { 
				which = bcn
				value = 18
			}
			if = { 
				limit = { 
					AND = { 
						check_variable = { 
							which = bcn
							value = 1
						}
					}
				}
				set_variable = { 
					which = bcn
					value = 1
				}
			}
			set_variable = { 
				which = arf
				value = 0
			}
			trigger_switch = { 
				on_trigger = adm
				6 = { 
					set_variable = { 
						which = arf
						value = 6
					}
				}
				5 = { 
					set_variable = { 
						which = arf
						value = 5
					}
				}
				4 = { 
					set_variable = { 
						which = arf
						value = 4
					}
				}
				3 = { 
					set_variable = { 
						which = arf
						value = 3
					}
				}
				2 = { 
					set_variable = { 
						which = arf
						value = 2
					}
				}
				1 = { 
					set_variable = { 
						which = arf
						value = 1
					}
				}
			}
			set_variable = { 
				which = arg
				value = 0
			}
			trigger_switch = { 
				on_trigger = dip
				6 = { 
					set_variable = { 
						which = arg
						value = 6
					}
				}
				5 = { 
					set_variable = { 
						which = arg
						value = 5
					}
				}
				4 = { 
					set_variable = { 
						which = arg
						value = 4
					}
				}
				3 = { 
					set_variable = { 
						which = arg
						value = 3
					}
				}
				2 = { 
					set_variable = { 
						which = arg
						value = 2
					}
				}
				1 = { 
					set_variable = { 
						which = arg
						value = 1
					}
				}
			}
			set_variable = { 
				which = arh
				value = 0
			}
			trigger_switch = { 
				on_trigger = mil
				6 = { 
					set_variable = { 
						which = arh
						value = 6
					}
				}
				5 = { 
					set_variable = { 
						which = arh
						value = 5
					}
				}
				4 = { 
					set_variable = { 
						which = arh
						value = 4
					}
				}
				3 = { 
					set_variable = { 
						which = arh
						value = 3
					}
				}
				2 = { 
					set_variable = { 
						which = arh
						value = 2
					}
				}
				1 = { 
					set_variable = { 
						which = arh
						value = 1
					}
				}
			}
			subtract_variable = { 
				which = arf
				which = hup
			}
			subtract_variable = { 
				which = arg
				which = huq
			}
			subtract_variable = { 
				which = arh
				which = hur
			}
			multiply_variable = { 
				which = arf
				value = -1
			}
			multiply_variable = { 
				which = arg
				value = -1
			}
			multiply_variable = { 
				which = arh
				value = -1
			}
			if = { 
				limit = { 
					AND = { 
						is_variable_equal = { 
							which = arf
							value = 6
						}
					}
				}
				if = { 
					limit = { 
						NOT = { 
							has_country_modifier = Ruler_ADM_6
						}
					}
					add_country_modifier = { 
						name = Ruler_ADM_6
						duration = -1
						hidden = yes
					}
				}
			}
			else_if = { 
				limit = { 
					has_country_modifier = Ruler_ADM_6
				}
				remove_country_modifier = Ruler_ADM_6
			}
			if = { 
				limit = { 
					AND = { 
						is_variable_equal = { 
							which = arf
							value = 5
						}
					}
				}
				if = { 
					limit = { 
						NOT = { 
							has_country_modifier = Ruler_ADM_5
						}
					}
					add_country_modifier = { 
						name = Ruler_ADM_5
						duration = -1
						hidden = yes
					}
				}
			}
			else_if = { 
				limit = { 
					has_country_modifier = Ruler_ADM_5
				}
				remove_country_modifier = Ruler_ADM_5
			}
			if = { 
				limit = { 
					AND = { 
						is_variable_equal = { 
							which = arf
							value = 4
						}
					}
				}
				if = { 
					limit = { 
						NOT = { 
							has_country_modifier = Ruler_ADM_4
						}
					}
					add_country_modifier = { 
						name = Ruler_ADM_4
						duration = -1
						hidden = yes
					}
				}
			}
			else_if = { 
				limit = { 
					has_country_modifier = Ruler_ADM_4
				}
				remove_country_modifier = Ruler_ADM_4
			}
			if = { 
				limit = { 
					AND = { 
						is_variable_equal = { 
							which = arf
							value = 3
						}
					}
				}
				if = { 
					limit = { 
						NOT = { 
							has_country_modifier = Ruler_ADM_3
						}
					}
					add_country_modifier = { 
						name = Ruler_ADM_3
						duration = -1
						hidden = yes
					}
				}
			}
			else_if = { 
				limit = { 
					has_country_modifier = Ruler_ADM_3
				}
				remove_country_modifier = Ruler_ADM_3
			}
			if = { 
				limit = { 
					AND = { 
						is_variable_equal = { 
							which = arf
							value = 2
						}
					}
				}
				if = { 
					limit = { 
						NOT = { 
							has_country_modifier = Ruler_ADM_2
						}
					}
					add_country_modifier = { 
						name = Ruler_ADM_2
						duration = -1
						hidden = yes
					}
				}
			}
			else_if = { 
				limit = { 
					has_country_modifier = Ruler_ADM_2
				}
				remove_country_modifier = Ruler_ADM_2
			}
			if = { 
				limit = { 
					AND = { 
						is_variable_equal = { 
							which = arf
							value = 1
						}
					}
				}
				if = { 
					limit = { 
						NOT = { 
							has_country_modifier = Ruler_ADM_1
						}
					}
					add_country_modifier = { 
						name = Ruler_ADM_1
						duration = -1
						hidden = yes
					}
				}
			}
			else_if = { 
				limit = { 
					has_country_modifier = Ruler_ADM_1
				}
				remove_country_modifier = Ruler_ADM_1
			}
			if = { 
				limit = { 
					AND = { 
						is_variable_equal = { 
							which = arf
							value = -6
						}
					}
				}
				if = { 
					limit = { 
						NOT = { 
							has_country_modifier = Ruler_ADM_6_neg
						}
					}
					add_country_modifier = { 
						name = Ruler_ADM_6_neg
						duration = -1
						hidden = yes
					}
				}
			}
			else_if = { 
				limit = { 
					has_country_modifier = Ruler_ADM_6_neg
				}
				remove_country_modifier = Ruler_ADM_6_neg
			}
			if = { 
				limit = { 
					AND = { 
						is_variable_equal = { 
							which = arf
							value = -5
						}
					}
				}
				if = { 
					limit = { 
						NOT = { 
							has_country_modifier = Ruler_ADM_5_neg
						}
					}
					add_country_modifier = { 
						name = Ruler_ADM_5_neg
						duration = -1
						hidden = yes
					}
				}
			}
			else_if = { 
				limit = { 
					has_country_modifier = Ruler_ADM_5_neg
				}
				remove_country_modifier = Ruler_ADM_5_neg
			}
			if = { 
				limit = { 
					AND = { 
						is_variable_equal = { 
							which = arf
							value = -4
						}
					}
				}
				if = { 
					limit = { 
						NOT = { 
							has_country_modifier = Ruler_ADM_4_neg
						}
					}
					add_country_modifier = { 
						name = Ruler_ADM_4_neg
						duration = -1
						hidden = yes
					}
				}
			}
			else_if = { 
				limit = { 
					has_country_modifier = Ruler_ADM_4_neg
				}
				remove_country_modifier = Ruler_ADM_4_neg
			}
			if = { 
				limit = { 
					AND = { 
						is_variable_equal = { 
							which = arf
							value = -3
						}
					}
				}
				if = { 
					limit = { 
						NOT = { 
							has_country_modifier = Ruler_ADM_3_neg
						}
					}
					add_country_modifier = { 
						name = Ruler_ADM_3_neg
						duration = -1
						hidden = yes
					}
				}
			}
			else_if = { 
				limit = { 
					has_country_modifier = Ruler_ADM_3_neg
				}
				remove_country_modifier = Ruler_ADM_3_neg
			}
			if = { 
				limit = { 
					AND = { 
						is_variable_equal = { 
							which = arf
							value = -2
						}
					}
				}
				if = { 
					limit = { 
						NOT = { 
							has_country_modifier = Ruler_ADM_2_neg
						}
					}
					add_country_modifier = { 
						name = Ruler_ADM_2_neg
						duration = -1
						hidden = yes
					}
				}
			}
			else_if = { 
				limit = { 
					has_country_modifier = Ruler_ADM_2_neg
				}
				remove_country_modifier = Ruler_ADM_2_neg
			}
			if = { 
				limit = { 
					AND = { 
						is_variable_equal = { 
							which = arf
							value = -1
						}
					}
				}
				if = { 
					limit = { 
						NOT = { 
							has_country_modifier = Ruler_ADM_1_neg
						}
					}
					add_country_modifier = { 
						name = Ruler_ADM_1_neg
						duration = -1
						hidden = yes
					}
				}
			}
			else_if = { 
				limit = { 
					has_country_modifier = Ruler_ADM_1_neg
				}
				remove_country_modifier = Ruler_ADM_1_neg
			}
			if = { 
				limit = { 
					AND = { 
						is_variable_equal = { 
							which = arg
							value = 6
						}
					}
				}
				if = { 
					limit = { 
						NOT = { 
							has_country_modifier = Ruler_DIP_6
						}
					}
					add_country_modifier = { 
						name = Ruler_DIP_6
						duration = -1
						hidden = yes
					}
				}
			}
			else_if = { 
				limit = { 
					has_country_modifier = Ruler_DIP_6
				}
				remove_country_modifier = Ruler_DIP_6
			}
			if = { 
				limit = { 
					AND = { 
						is_variable_equal = { 
							which = arg
							value = 5
						}
					}
				}
				if = { 
					limit = { 
						NOT = { 
							has_country_modifier = Ruler_DIP_5
						}
					}
					add_country_modifier = { 
						name = Ruler_DIP_5
						duration = -1
						hidden = yes
					}
				}
			}
			else_if = { 
				limit = { 
					has_country_modifier = Ruler_DIP_5
				}
				remove_country_modifier = Ruler_DIP_5
			}
			if = { 
				limit = { 
					AND = { 
						is_variable_equal = { 
							which = arg
							value = 4
						}
					}
				}
				if = { 
					limit = { 
						NOT = { 
							has_country_modifier = Ruler_DIP_4
						}
					}
					add_country_modifier = { 
						name = Ruler_DIP_4
						duration = -1
						hidden = yes
					}
				}
			}
			else_if = { 
				limit = { 
					has_country_modifier = Ruler_DIP_4
				}
				remove_country_modifier = Ruler_DIP_4
			}
			if = { 
				limit = { 
					AND = { 
						is_variable_equal = { 
							which = arg
							value = 3
						}
					}
				}
				if = { 
					limit = { 
						NOT = { 
							has_country_modifier = Ruler_DIP_3
						}
					}
					add_country_modifier = { 
						name = Ruler_DIP_3
						duration = -1
						hidden = yes
					}
				}
			}
			else_if = { 
				limit = { 
					has_country_modifier = Ruler_DIP_3
				}
				remove_country_modifier = Ruler_DIP_3
			}
			if = { 
				limit = { 
					AND = { 
						is_variable_equal = { 
							which = arg
							value = 2
						}
					}
				}
				if = { 
					limit = { 
						NOT = { 
							has_country_modifier = Ruler_DIP_2
						}
					}
					add_country_modifier = { 
						name = Ruler_DIP_2
						duration = -1
						hidden = yes
					}
				}
			}
			else_if = { 
				limit = { 
					has_country_modifier = Ruler_DIP_2
				}
				remove_country_modifier = Ruler_DIP_2
			}
			if = { 
				limit = { 
					AND = { 
						is_variable_equal = { 
							which = arg
							value = 1
						}
					}
				}
				if = { 
					limit = { 
						NOT = { 
							has_country_modifier = Ruler_DIP_1
						}
					}
					add_country_modifier = { 
						name = Ruler_DIP_1
						duration = -1
						hidden = yes
					}
				}
			}
			else_if = { 
				limit = { 
					has_country_modifier = Ruler_DIP_1
				}
				remove_country_modifier = Ruler_DIP_1
			}
			if = { 
				limit = { 
					AND = { 
						is_variable_equal = { 
							which = arg
							value = -6
						}
					}
				}
				if = { 
					limit = { 
						NOT = { 
							has_country_modifier = Ruler_DIP_6_neg
						}
					}
					add_country_modifier = { 
						name = Ruler_DIP_6_neg
						duration = -1
						hidden = yes
					}
				}
			}
			else_if = { 
				limit = { 
					has_country_modifier = Ruler_DIP_6_neg
				}
				remove_country_modifier = Ruler_DIP_6_neg
			}
			if = { 
				limit = { 
					AND = { 
						is_variable_equal = { 
							which = arg
							value = -5
						}
					}
				}
				if = { 
					limit = { 
						NOT = { 
							has_country_modifier = Ruler_DIP_5_neg
						}
					}
					add_country_modifier = { 
						name = Ruler_DIP_5_neg
						duration = -1
						hidden = yes
					}
				}
			}
			else_if = { 
				limit = { 
					has_country_modifier = Ruler_DIP_5_neg
				}
				remove_country_modifier = Ruler_DIP_5_neg
			}
			if = { 
				limit = { 
					AND = { 
						is_variable_equal = { 
							which = arg
							value = -4
						}
					}
				}
				if = { 
					limit = { 
						NOT = { 
							has_country_modifier = Ruler_DIP_4_neg
						}
					}
					add_country_modifier = { 
						name = Ruler_DIP_4_neg
						duration = -1
						hidden = yes
					}
				}
			}
			else_if = { 
				limit = { 
					has_country_modifier = Ruler_DIP_4_neg
				}
				remove_country_modifier = Ruler_DIP_4_neg
			}
			if = { 
				limit = { 
					AND = { 
						is_variable_equal = { 
							which = arg
							value = -3
						}
					}
				}
				if = { 
					limit = { 
						NOT = { 
							has_country_modifier = Ruler_DIP_3_neg
						}
					}
					add_country_modifier = { 
						name = Ruler_DIP_3_neg
						duration = -1
						hidden = yes
					}
				}
			}
			else_if = { 
				limit = { 
					has_country_modifier = Ruler_DIP_3_neg
				}
				remove_country_modifier = Ruler_DIP_3_neg
			}
			if = { 
				limit = { 
					AND = { 
						is_variable_equal = { 
							which = arg
							value = -2
						}
					}
				}
				if = { 
					limit = { 
						NOT = { 
							has_country_modifier = Ruler_DIP_2_neg
						}
					}
					add_country_modifier = { 
						name = Ruler_DIP_2_neg
						duration = -1
						hidden = yes
					}
				}
			}
			else_if = { 
				limit = { 
					has_country_modifier = Ruler_DIP_2_neg
				}
				remove_country_modifier = Ruler_DIP_2_neg
			}
			if = { 
				limit = { 
					AND = { 
						is_variable_equal = { 
							which = arg
							value = -1
						}
					}
				}
				if = { 
					limit = { 
						NOT = { 
							has_country_modifier = Ruler_DIP_1_neg
						}
					}
					add_country_modifier = { 
						name = Ruler_DIP_1_neg
						duration = -1
						hidden = yes
					}
				}
			}
			else_if = { 
				limit = { 
					has_country_modifier = Ruler_DIP_1_neg
				}
				remove_country_modifier = Ruler_DIP_1_neg
			}
			if = { 
				limit = { 
					AND = { 
						is_variable_equal = { 
							which = arh
							value = 6
						}
					}
				}
				if = { 
					limit = { 
						NOT = { 
							has_country_modifier = Ruler_MIL_6
						}
					}
					add_country_modifier = { 
						name = Ruler_MIL_6
						duration = -1
						hidden = yes
					}
				}
			}
			else_if = { 
				limit = { 
					has_country_modifier = Ruler_MIL_6
				}
				remove_country_modifier = Ruler_MIL_6
			}
			if = { 
				limit = { 
					AND = { 
						is_variable_equal = { 
							which = arh
							value = 5
						}
					}
				}
				if = { 
					limit = { 
						NOT = { 
							has_country_modifier = Ruler_MIL_5
						}
					}
					add_country_modifier = { 
						name = Ruler_MIL_5
						duration = -1
						hidden = yes
					}
				}
			}
			else_if = { 
				limit = { 
					has_country_modifier = Ruler_MIL_5
				}
				remove_country_modifier = Ruler_MIL_5
			}
			if = { 
				limit = { 
					AND = { 
						is_variable_equal = { 
							which = arh
							value = 4
						}
					}
				}
				if = { 
					limit = { 
						NOT = { 
							has_country_modifier = Ruler_MIL_4
						}
					}
					add_country_modifier = { 
						name = Ruler_MIL_4
						duration = -1
						hidden = yes
					}
				}
			}
			else_if = { 
				limit = { 
					has_country_modifier = Ruler_MIL_4
				}
				remove_country_modifier = Ruler_MIL_4
			}
			if = { 
				limit = { 
					AND = { 
						is_variable_equal = { 
							which = arh
							value = 3
						}
					}
				}
				if = { 
					limit = { 
						NOT = { 
							has_country_modifier = Ruler_MIL_3
						}
					}
					add_country_modifier = { 
						name = Ruler_MIL_3
						duration = -1
						hidden = yes
					}
				}
			}
			else_if = { 
				limit = { 
					has_country_modifier = Ruler_MIL_3
				}
				remove_country_modifier = Ruler_MIL_3
			}
			if = { 
				limit = { 
					AND = { 
						is_variable_equal = { 
							which = arh
							value = 2
						}
					}
				}
				if = { 
					limit = { 
						NOT = { 
							has_country_modifier = Ruler_MIL_2
						}
					}
					add_country_modifier = { 
						name = Ruler_MIL_2
						duration = -1
						hidden = yes
					}
				}
			}
			else_if = { 
				limit = { 
					has_country_modifier = Ruler_MIL_2
				}
				remove_country_modifier = Ruler_MIL_2
			}
			if = { 
				limit = { 
					AND = { 
						is_variable_equal = { 
							which = arh
							value = 1
						}
					}
				}
				if = { 
					limit = { 
						NOT = { 
							has_country_modifier = Ruler_MIL_1
						}
					}
					add_country_modifier = { 
						name = Ruler_MIL_1
						duration = -1
						hidden = yes
					}
				}
			}
			else_if = { 
				limit = { 
					has_country_modifier = Ruler_MIL_1
				}
				remove_country_modifier = Ruler_MIL_1
			}
			if = { 
				limit = { 
					AND = { 
						is_variable_equal = { 
							which = arh
							value = -6
						}
					}
				}
				if = { 
					limit = { 
						NOT = { 
							has_country_modifier = Ruler_MIL_6_neg
						}
					}
					add_country_modifier = { 
						name = Ruler_MIL_6_neg
						duration = -1
						hidden = yes
					}
				}
			}
			else_if = { 
				limit = { 
					has_country_modifier = Ruler_MIL_6_neg
				}
				remove_country_modifier = Ruler_MIL_6_neg
			}
			if = { 
				limit = { 
					AND = { 
						is_variable_equal = { 
							which = arh
							value = -5
						}
					}
				}
				if = { 
					limit = { 
						NOT = { 
							has_country_modifier = Ruler_MIL_5_neg
						}
					}
					add_country_modifier = { 
						name = Ruler_MIL_5_neg
						duration = -1
						hidden = yes
					}
				}
			}
			else_if = { 
				limit = { 
					has_country_modifier = Ruler_MIL_5_neg
				}
				remove_country_modifier = Ruler_MIL_5_neg
			}
			if = { 
				limit = { 
					AND = { 
						is_variable_equal = { 
							which = arh
							value = -4
						}
					}
				}
				if = { 
					limit = { 
						NOT = { 
							has_country_modifier = Ruler_MIL_4_neg
						}
					}
					add_country_modifier = { 
						name = Ruler_MIL_4_neg
						duration = -1
						hidden = yes
					}
				}
			}
			else_if = { 
				limit = { 
					has_country_modifier = Ruler_MIL_4_neg
				}
				remove_country_modifier = Ruler_MIL_4_neg
			}
			if = { 
				limit = { 
					AND = { 
						is_variable_equal = { 
							which = arh
							value = -3
						}
					}
				}
				if = { 
					limit = { 
						NOT = { 
							has_country_modifier = Ruler_MIL_3_neg
						}
					}
					add_country_modifier = { 
						name = Ruler_MIL_3_neg
						duration = -1
						hidden = yes
					}
				}
			}
			else_if = { 
				limit = { 
					has_country_modifier = Ruler_MIL_3_neg
				}
				remove_country_modifier = Ruler_MIL_3_neg
			}
			if = { 
				limit = { 
					AND = { 
						is_variable_equal = { 
							which = arh
							value = -2
						}
					}
				}
				if = { 
					limit = { 
						NOT = { 
							has_country_modifier = Ruler_MIL_2_neg
						}
					}
					add_country_modifier = { 
						name = Ruler_MIL_2_neg
						duration = -1
						hidden = yes
					}
				}
			}
			else_if = { 
				limit = { 
					has_country_modifier = Ruler_MIL_2_neg
				}
				remove_country_modifier = Ruler_MIL_2_neg
			}
			if = { 
				limit = { 
					AND = { 
						is_variable_equal = { 
							which = arh
							value = -1
						}
					}
				}
				if = { 
					limit = { 
						NOT = { 
							has_country_modifier = Ruler_MIL_1_neg
						}
					}
					add_country_modifier = { 
						name = Ruler_MIL_1_neg
						duration = -1
						hidden = yes
					}
				}
			}
			else_if = { 
				limit = { 
					has_country_modifier = Ruler_MIL_1_neg
				}
				remove_country_modifier = Ruler_MIL_1_neg
			}
			set_variable = { 
				which = hun
				value = 1
			}
			subtract_variable = { 
				which = hun
				which = bcn
			}
			multiply_variable = { 
				which = hun
				which = hun
			}
			multiply_variable = { 
				which = hun
				value = 100
			}
			multiply_variable = { 
				which = bcn
				value = 100
			}
			set_variable = { 
				which = arf
				value = 0
			}
			set_variable = { 
				which = arg
				value = 0
			}
			set_variable = { 
				which = arh
				value = 0
			}
		}
		clr_country_flag = Ruler_ExileRestore
		log = "FE-RulerPOW:[GetYear]:[Root.GetName]:Ruler ([Root.Monarch.GetName]) returned from prison:prisonner_of_war.102"
		if = { 
			limit = { 
				tag = FRA
				has_country_flag = king_jean_released
			}
			clr_country_flag = king_jean_released
		}
	}
}
country_event = { 
	id = prisonner_of_war.103
	title = "prisonner_of_war.103.name"
	desc = "prisonner_of_war.103.desc"
	picture = CONQUEST_eventPicture
	is_triggered_only = yes
	option = { 
		name = "prisonner_of_war.103.opta"
		set_ruler = ruler_pow
		clr_country_flag = ruler_prisonner_of_war
		log = "FE-RulerPOW:[GetYear]:[Root.GetName]:Ruler ([Root.Monarch.GetName]) returned from prison:prisonner_of_war.103"
		log = "FE-RulerPOW:[GetYear]:[Root.GetName]:Heir ([Root.Heir.GetName]) asked to step aside:prisonner_of_war.103"
		if = { 
			limit = { 
				government = monarchy
			}
			if = { 
				limit = { 
					NOT = { 
						has_heir = "Placeholder"
					}
				}
				random_list = { 
					50 = { 
						country_event = { 
							id = prisonner_of_war.104
							days = 0
						}
					}
					50 = { 
						country_event = { 
							id = prisonner_of_war.105
							days = 0
						}
					}
				}
			}
			set_heir = heir_pow
		}
	}
}
country_event = { 
	id = prisonner_of_war.104
	title = "prisonner_of_war.104.name"
	desc = "prisonner_of_war.104.desc"
	picture = CONQUEST_eventPicture
	is_triggered_only = yes
	option = { 
		name = "prisonner_of_war.104.opta"
		log = "FE-RulerPOW:[GetYear]:[Root.GetName]:Heir ([Root.Heir.GetName]) accepted to step aside:prisonner_of_war.104"
	}
}
country_event = { 
	id = prisonner_of_war.105
	title = "prisonner_of_war.105.name"
	desc = "prisonner_of_war.105.desc"
	picture = CONQUEST_eventPicture
	is_triggered_only = yes
	option = { 
		name = "prisonner_of_war.105.opta"
		capital_scope = { 
			spawn_rebels = { 
				type = pretender_rebels
				size = 2
			}
		}
		log = "FE-RulerPOW:[GetYear]:[Root.GetName]:Heir ([Root.Heir.GetName]) refused to step aside:prisonner_of_war.105"
		log = "FE-RulerPOW:[GetYear]:[Root.GetName]:Heir ([Root.Heir.GetName]) started rebellion:prisonner_of_war.105"
	}
}
country_event = { 
	id = prisonner_of_war.501
	title = "prisonner_of_war.501.name"
	desc = "prisonner_of_war.501.desc"
	picture = CONQUEST_eventPicture
	is_triggered_only = yes
	option = { 
		name = "prisonner_of_war.501.opta"
		ai_chance = { 
			factor = 90
		}
		FRA = { 
			country_event = { 
				id = prisonner_of_war.511
				days = 0
			}
		}
		log = "FE-RulerPOW:[GetYear]:[Root.GetName]:asked for Aquitaine for releasing Jean II:prisonner_of_war.501"
	}
	option = { 
		name = "prisonner_of_war.501.optb"
		ai_chance = { 
			factor = 10
		}
		log = "FE-RulerPOW:[GetYear]:[Root.GetName]:asked for Aquitaine and Normandy for releasing Jean II:prisonner_of_war.501"
		FRA = { 
			country_event = { 
				id = prisonner_of_war.521
				days = 0
			}
		}
	}
	option = { 
		name = "prisonner_of_war.501.optc"
		ai_chance = { 
			factor = 0
		}
		log = "FE-RulerPOW:[GetYear]:[Root.GetName]:refused to negotiate releasing Jean II:prisonner_of_war.501"
		FRA = { 
			country_event = { 
				id = prisonner_of_war.531
				days = 0
			}
		}
	}
}
country_event = { 
	id = prisonner_of_war.511
	title = "prisonner_of_war.511.name"
	desc = "prisonner_of_war.511.desc"
	picture = CONQUEST_eventPicture
	is_triggered_only = yes
	immediate = { 
		clr_country_flag = negociating_release_jean
	}
	option = { 
		name = "prisonner_of_war.511.opta"
		ai_chance = { 
			factor = 90
		}
		log = "FE-RulerPOW:[GetYear]:[Root.GetName]:ceded Aquitaine for releasing Jean II:prisonner_of_war.511"
		bretigny_group = { 
			limit = { 
				is_city = yes
				OR = { 
					owned_by = ROOT
					owner = { 
						AND = { 
							OR = { 
								is_subject_of_type = vassal
								is_subject_of_type = custom_vassal
							}
							if = { 
								limit = { 
									always = yes
								}
								is_subject_of = ROOT
							}
						}
					}
					owner = { 
						junior_union_with = ROOT
					}
				}
			}
			cede_province = GUY
		}
		set_country_flag = king_jean_released
		set_ruler = ruler_fra_hyw_pow
		set_heir = heir_fra_hyw_pow
		set_consort = consort_fra_hyw_pow
		clr_country_flag = ruler_prisonner_of_war
		set_global_flag = treaty_of_bretigny
		add_war_exhaustion = -4
		add_country_modifier = { 
			name = "Jean_ransom_fra"
			duration = 5475
		}
		ENG = { 
			white_peace = BLO
			add_country_modifier = { 
				name = "Jean_ransom_eng"
				duration = 5475
			}
		}
		NAV = { 
			white_peace = BLO
		}
		white_peace = MNF
	}
	option = { 
		name = "prisonner_of_war.501.optc"
		ai_chance = { 
			factor = 10
		}
		log = "FE-RulerPOW:[GetYear]:[Root.GetName]:refused to cede Aquitaine for releasing Jean II:prisonner_of_war.511"
	}
}
country_event = { 
	id = prisonner_of_war.521
	title = "prisonner_of_war.521.name"
	desc = "prisonner_of_war.521.desc"
	picture = CONQUEST_eventPicture
	is_triggered_only = yes
	immediate = { 
		clr_country_flag = negociating_release_jean
		log = "FE-RulerPOW:[GetYear]:[FRA.GetName]:before the event it was ruled by [FRA.Monarch.GetName] [FRA.Monarch.Dynasty.GetName]:prisonner_of_war.521"
	}
	option = { 
		name = "prisonner_of_war.521.opta"
		ai_chance = { 
			factor = 90
		}
		log = "FE-RulerPOW:[GetYear]:[Root.GetName]:ceded Aquitaine and Normandy for releasing Jean II:prisonner_of_war.521"
		bretigny_group = { 
			limit = { 
				is_city = yes
				OR = { 
					owned_by = ROOT
					owner = { 
						AND = { 
							OR = { 
								is_subject_of_type = vassal
								is_subject_of_type = custom_vassal
							}
							if = { 
								limit = { 
									always = yes
								}
								is_subject_of = ROOT
							}
						}
					}
					owner = { 
						junior_union_with = ROOT
					}
				}
			}
			cede_province = GUY
			add_core = ROOT
		}
		every_owned_province = { 
			limit = { 
				area = normandy_area
			}
			cede_province = ENG
		}
		set_country_flag = king_jean_released
		set_ruler = ruler_fra_hyw_pow
		set_heir = heir_fra_hyw_pow
		set_consort = consort_fra_hyw_pow
		clr_country_flag = ruler_prisonner_of_war
		set_global_flag = treaty_of_bretigny
		add_war_exhaustion = -2
		add_country_modifier = { 
			name = "Jean_ransom_fra"
			duration = 2555
		}
		ENG = { 
			white_peace = BLO
			add_country_modifier = { 
				name = "Jean_ransom_eng"
				duration = 2555
			}
		}
		NAV = { 
			white_peace = BLO
		}
		white_peace = MNF
		log = "FE-RulerPOW:[GetYear]:[FRA.GetName]:after the event it was ruled by [FRA.Monarch.GetName] [FRA.Monarch.Dynasty.GetName]:prisonner_of_war.521"
	}
	option = { 
		name = "prisonner_of_war.501.optc"
		ai_chance = { 
			factor = 10
		}
		log = "FE-RulerPOW:[GetYear]:[Root.GetName]:refused to cede Aquitaine and Normandy for releasing Jean II:prisonner_of_war.521"
		log = "FE-RulerPOW:[GetYear]:[FRA.GetName]:after the event it was ruled by [FRA.Monarch.GetName] [FRA.Monarch.Dynasty.GetName]:prisonner_of_war.521"
	}
}
country_event = { 
	id = prisonner_of_war.531
	title = "prisonner_of_war.531.name"
	desc = "prisonner_of_war.531.desc"
	picture = CONQUEST_eventPicture
	is_triggered_only = yes
	immediate = { 
		clr_country_flag = negociating_release_jean
	}
	option = { 
		name = "prisonner_of_war.531.opta"
	}
}
